/EDITOR FOR OMSI BASIC

/    COPYRIGHT 1972 BY THE OREGON MUSEUM OF
/	      SCIENCE AND INDUSTRY
/***** DON BACCUS AND GERD HOEREN AUTHORS *****
/	      ALL RIGHTS RESERVED


	FIELD 0
	BUFBEG=22	/START OF TEXT BUFFER IN FIELD 1
	EDITLEN=17	/LENGTH OF EDITOR
	TMLEN=22	/LENGTH OF SCRATCH AREA

	*0
NAME,	FILENAME NONE.BA

	*10
INBUFF, 0	/INPUT BUFFER POINTER
XR1,	0	/GENERAL PUROPSE AUTO INDEX REGISTERS
XR2,	0
XR3,	0
TYPSW,	0	/=4000 IF TTY ECHO IS OFF
MAXTAB,	110	/MAXIMUM NUMBER OF CHARACTERS PER LINE
CHAR,	0
XTEMP,	0

	*20
PACKWD,	BUFBEG	/PACK POINTER OF TEXT BUFFER
PACKSV,	0	/POINTER TO LENGTH WORD OF LINE
UNWD,	0	/UNPACK POINTER OF TEXT BUFFER
INHNDL,	0	/ENTRY OF DEVICE HANDLER
DEVNO,	0	/CURRENT DEVICE NUMBER
LARGE,	0	/NEXT LARGEST LINE FROM FINDLN
LINE,	1	/CURRENT DECIMAL LINE #
SHNDLR,	0	/ENTRY OF BASIC SYSTEM HANDLER
BUFEND,	-7577	/LAST LOC AVAILABLE IN TEXT BUFFER
RESW,	0	/=1 IF IN RESEQ
RSTART,	0	/TEMPORARIES FOR RESEQUENCE:
RINC,	0
RTEMP,	0
RNUMB,	0
RTEMP2,	0
ENDBUF,	0	/LAST LOCATION IN FIELD ZERO
PNTR2,	0	/GENERAL TEMPORARIES:
BOTTOM,	0
LARG2,	0
TAL,	0
STEMP,	0
C1,	0
M1,	0
TEMP,	0
T1,	0
PNTR,	0
T2,	0
HFSAVE,	0	/USED BY 'SEARCH' COMMAND
RFULL,	0	/=7777 IF THERE IS AT LEAST 1 MORE
		/CHARACTER TO READ FROM KEYBOARD BUFFER (CBUFF)
RSW,	0	/RUBOUT SWITCH
PROTECT,0	/RUBOUT PROTECTION
DEV,	LOW
SRCHSW,	0	/=0 IF NOT IN SEARCH
OUJMPE,	OUJMP&177+5200	/CONSTANT FOR 3/2 PACKING ROUTINE
USR,	7700	/ENTRY OF USER SERVICE ROUTINE (USR) (200 IF IN CORE)

/BASIC PSEUDO INSTRUCTIONS:

ODEV,	TYPE=JMS I .	;XTYPE
	FINDLN=JMS I .	;XFIN
	NUMBCK=JMS I .	;XNUMB
	WIPE=JMS I .	;XWIPE
	RTL6=JMS I .	;XRTL6
	DEC=JMS I .	;XDEC
	PRINT=JMS I .	;XPRINT
	SORT=JMS I .	;XSORT
	PACK=JMS I .	;XPACK
	UNPACK=JMS I .	;UNPAC0
IDEV,	READ=JMS I .	;XREAD
	PLINE=JMS I .	;XPLINE
	SPNOR=JMS I .	;XSPNOR
	CARET=JMS I .	;XCARET
	REPLACE=JMP I .	;END1
	GCHAR=JMS I .	;XGCHAR
	GNAME=JMS I .	;XGNAME
	GHNDL=JMS I .	;XGHNDL
	RNAME=JMS I .	;XRNAME
	KEY=JMS I .	;XKEY
	ARGS=JMS I .	;XARG
	STOLN=JMS I .	;XSTOLN
	CRCHK=JMS I .	;XCRCHK
	UPPER=JMS I .	;XUPPER
	KILL=JMS I .	;XKILL
	KIKOUT=JMS I .	;KOUT
	DEVER=JMP I .	;XDEVER
	GARGS=JMS I .	;XGETA
	PFNAME=JMS I .	;XPFNAM
	PFEXT=JMS I .	;XPFEXT

		PAGE
/INITIALIZATION FOR OMSI BASIC

	/MODIFIED BY DRB IN 2022 TO MAKE CCL "BASIC" COMMAND WORK

	NOP		/ENTRY FROM OS/8. BECOMES "JMP CNTRLC"
	TAD I MONLOC	/ENTRY FROM CCL "BASIC" COMMAND

	DCA SHNDLR	/GET STARTING BLOCK NUMBER OF
	TAD (4		/BASIC.SV AND HANDLER ENTRY OF
	TAD MONLOC	/DEVICE FROM WHICH WE CAME
	DCA MONLOC
	CMA CLL
	TAD I MONLOC	/STARTING RECORD OF BASIC.SV
	CDF 10		/OF PUNCH OVERLAY
	DCA I (5
	CDF
	TAD SHNDLR
	TAD [400	/DID WE COME FROM AN OS/8 NON-SYSTEM
	SNL CLA		/DEVICE?
	JMP MOVE1	/NO
	TAD SHNDLR	/YES, MOVE HANDLER FOR BASIC TO
	AND L7600	/PAGE 7400 SO THAT IT WILL
	DCA T1		/ALSO WORK FROM AN OS/8
	TAD [7400	/NON-SYSTEM DEVICE.
	DCA T2
	TAD L7600
	DCA TAL		/MOVE 200 WORDS
MOVE,	TAD I T1
	DCA I T2
	ISZ T1
	ISZ T2
	ISZ TAL
	JMP MOVE
	TAD SHNDLR	/UPDATE HADLER ENTRY
	AND [177
	TAD [7400
	DCA SHNDLR
MOVE1,	JMS PSAVE	/MAKE CURRENT NAME 'NONE.BA'
	JMS I (FIX200
	TAD SHNDLR
	AND L7600	/CALCULATE IF PAGE 7400
	DCA ENDBUF	/IS BEING USED
CNTRLC,	TAD [212	/CHA-CHUNKA
	TLS
L7600,	7600		/CLA
	REPLACE		/RESET ALL SWITCHES IN CASE OF ^C


/SORT LIST OF SECIAL CHARACTERS FOR OLD COMMAND

ILST2,	ICTRLZ
	ICHAR+1
	ICHAR+1
	ICHAR+1
	ICHAR+1
	/SUBROUTINE TO SAVE THE USER'S TEXT

STEXT,	0
	TAD PACKWD	/GENERATE FUNCTION WORD
	AND [7600	/FOR SAVE
	TAD [200
	RAR CLL
	TAD (10
	CDF 10
	DCA I (1
	TAD PACKWD
	DCA I (2	/BUFFER POINTER
	TAD (EDITLEN	/NUMBER OF BLOCKS TO SCRATCH AREA
	TAD I (5	/STARTING BLOCK OF BASIC.SV
	DCA SWAPRC
	TAD SHNDLR	/ENTRY POINT OF HANDLER
	DCA I (3
	DCA I L0	/INHIBIT 'STOP AT XX' ON CHAIN ERRORS
	TAD (EDITLEN+TMLEN	/NO. BLOCKS TO COMPILER
	TAD I (5	/STARTING BLOCK NUMBER OF EDITOR
	DCA CMP
	CML CLL RAR
	TAD I (1
	DCA SWPCTL	/FUNCTION WD +4000 - WRITE
	CDF
	JMS I SHNDLR	/SAVE USER'S PROGRAM
SWPCTL,	0		/FUNCTION WORD
L0,	0		/CORE
SWAPRC,	0		/NUMBER OF PAGES
	 DEVER
	JMP I STEXT


	/'COMPILE' OR 'RUN'
	/OVERLAY COMPILER

	*313
RUN2,	JMS STEXT
	JMS PSAVE	/SAVE FILNAME FOR COMPILE COMMAND
	JMS I SHNDLR	/READ COMPILER OVER OURSELVES
	3500		/READ 35 PAGES
	0		/STARTING AT 0000
CMP,	0		/STARTING BLOCK
	 DEVER		/MUST BE LOCATION 321!
	//////		/COMPILE WILL BE IN CORE ON RETURN
	JMS PGET	/ENTRY FROM COMPILER OR RUNTIME
			/SYSTEM.  MUST BE LOC. 322!
	CDF 10
	TAD I L0	/LINE NUMBER IN CASE OF ^P
	DCA LINE
	JMS I (FIX200
	TAD I (3
	DCA SHNDLR	/SYSTEM HNDLER ENTRY
	TAD SHNDLR	/SEE IF PAGE 7400 IS USED
	AND L7600
	DCA ENDBUF
	JMP CGET	/CHECK FOR COMPILE COMMAND

	JCTRLC=JMP CNTRLC

	/PUT PERMANENT FILENAME INTO 'NAME'

PGET,	0
	KIKOUT
	TAD [6		/NAME IS STORED IN LOCATIONS
	DCA XR2		/10007 - 10012
	STA
	DCA XR1
	TAD [-4
	DCA TAL
	CDF 10
	TAD I XR2
	CDF
	DCA I XR1
	ISZ TAL
	JMP .-5
	JMP I PGET

MONLOC,	7756		/LOCATION WHERE MONITOR STORES
			/START OF BASIC.SV

/LIST OF SPECIAL CHARACTERS FOR 'OLD' COMMAND:

ILST1,	232		/^Z
	200		/NULL
	212		/LF
	214		/^L
	377		/RO
	-1

	PAGE
	/BASIC COMMAND MODE

CMODE,	PRINT; READY
	DCA RFULL	/CLEAR INPUT BUFFER
	SPNOR		/IGNORE LEADING SPACES
	CRCHK		/CARRIAGE RETURN CHECK
	JMP CMODE+2	/IGNORE NULL LINES
	NUMBCK		/FIRST CHAR ON LINE A NUMBER?
	JMP COM		/NO, MUST BE COMMAND
	DEC		/YES, FORM LINE NUMBER
	DCA LINE	/CLA WOULD DO
	KIKOUT
EGO,	TAD LINE	/'EDIT' ENTERS HERE
	FINDLN		/CHECK IF LINE ALREADY PRESENT
	SKP CLA		/NO
	WIPE		/YES, ERASE IT
	TAD CHAR
	CRCHK
	JMP CMODE+2	/ERASE LINE (LINE NO, CR)
	TAD (-240
	SNA CLA
	GCHAR		/IGNORE ONE SPACE
	TAD LINE
	STOLN		/STORE NEW LINE NUMBER
	TAD CHAR
	SKP		/AND PACK THE NEW LINE
	READ
	PACK
	TAD CHAR
	TAD [-215	/PACK UNTIL CR IS REACHED
	SZA CLA
	JMP .-5
	JMP CMODE+2	/GO BACK FOR EITHER ANOTHER LINE OR COMMAND


	/COMMAND ENTERED

COM,	UPPER		/PACK FIRST TWO LETTERS OF
	AND [77		/COMMAND INTO M1
	RTL6
	DCA M1
	CARET
	UPPER
	AND [77
	TAD M1
	DCA M1
	UPPER
	DCA RSW		/STORE THIRD LETTER IN CASE IT IS NEEDED
	TAD CHAR
	SKP		/NOW SKIP UNTIL A TERMINATOR IS REACHED
	READ
	TAD [-300	/CHECK FOR NONE-LETTER CHARACTER
	SMA CLA
	JMP .-3
	TAD M1		/WE FOUND ONE!!
	SORT		/NOW EXECUTE COMMAND
	 LT1
	 LT2-LT1
ERR,	PRINT; WHAT	/COMMAND NOT FOUND
	JMP CMODE+2

RE,	TAD RSW		/CHOOSE BETWEEN RENAME,
	SORT		/REPLACE, AND RESEQUENCE
	 REL1
	 REL2-REL1
	JMP ERR		/NONE OF ABOVE

REL1,	"N		/RENAME
	"P		/REPLACE
	"S		/RESEQUENCE
	-1

REL2,	REN
	REP
	RESEQ

	/LIST OF EDITOR COMMANDS:

LT1,	0530		/EXECUTE
	2401		/TAPE
	2025		/PUNCH
	1620		/NPUNCH
	1501		/MARGIN
	0504		/EDIT
	1614		/NLIST
	1622		/NREP
	0317		/COMPILE
	1726		/OVERLAY
	1623		/NSAVE
	2225		/RUN
	0405		/DELETE
	2516		/UNSAVE
	301		/CATALOG
	2303		/SCRATCH
	1405		/LENGTH
	2301		/SAVE
	1714		/OLD
	2305		/SEARCH
	231		/BYE
	1411		/LIST
	1605		/NEW
	2205		/RENAME OR REPLACE
	-1		/END OF LIST

	/LIST OF COMMAND HANDLERS

LT2,	EXECUTE
	TAPE
	PUNCH
	NPUNCH
	MARGIN
	EDIT
	NLIST
	NREP
	COMPL2
	OVLAY
	NSAVE
	RUN
	DELTE
	UNSAVE
	CAT
	EALL
	LEN
	SAVE
	OLD
	SEARCH
	GOODBYE+2
	LIST
	NEW
	RE

/DRB KLUDGE TO MAKE ROOM ON PAGE 1 SO CCL BASIC
/COMMAND WILL WORK.

FIX200,	0
	TAD (JCTRLC
	DCA I [200
	JMP I FIX200

	PAGE
	/LIST ONE LINE

LISTLN,	0
	TAD [PLSP	/PRINT LEADING SPACES
	DCA XPSW2
	TAD T1		/T1 = LINE NUMBER
	PLINE		/PRINT LINE NUMBER
	TAD [240
	TYPE		/SEPARATE LINE # AND TEXT WITH A SPACE
LIN1,	UNPACK
	CRCHK		/CHECK FOR A CR
	JMP LIN2	/CR MEANS END OF LINE
	TYPE		/TYPE CHARACTER
	JMP LIN1
LIN2,	TAD [215	/ECHO CR
	TYPE
	JMP I LISTLN	/AND EXIT


	/PRINT DECIMAL LINE NUMBER
	/ENTER WITH LINE NUMBER IN (AC)

XPLINE,	0
	DCA T2		/TEMP STORAGE
	TAD (SNA
	DCA XPSW	/INITIALIZE SWITCH
	TAD (DIV-1
	DCA XR1		/POINTER TO POWERS OF TEN
XPL1,	TAD I XR1
	SMA
	JMP I XPLINE	/LIST ENDED WITH NEGATIVE NUMBER
	DCA TAL
	DCA PNTR
	TAD T2
	CLL
	TAD TAL		/DIVIDE BY A POWER OF TEN
	SNL
	JMP .+3
	ISZ PNTR	/ADD ONE TO QUOTIENT
	JMP .-5		/CONTINUE
	CIA
	TAD TAL
	CIA
	DCA T2
	TAD PNTR
XPSW,	HLT		/EITHER SKP OR SNA
XPSW2,	JMP XPL1	/OR 'JMP XPL11' FOR LEADING SPACES
	TAD (260	/MAKE ASCII CODE FOR DIGIT
	TYPE		/AND TYPE IT
	TAD (SKP
	DCA XPSW	/SINCE THIS WAS A DIGIT,NEXT ZERO IS NOT
	JMP XPL1	/LEADING.

	/POWERS OF 10

DIV,	-1750;-144;-12;-1;0

XPL11,	TAD [240	/PRINT A LEADING SPACE
	TYPE
	JMP XPL1

NLSP=JMP XPL1		/OMIT LEADING SPACES
PLSP=JMP XPL11		/PRINT LEADING SPACES


	/CHECK FOR CR

XCRCHK,	0
	SNA		/IF (AC) = 0 - GET NEXT CHARACTER
	READ
	TAD [-215	/CHECK FOR CR
	SNA
	JMP I XCRCHK	/RETURN+1 WITH AC=0 IF CR
	TAD [215
	ISZ XCRCHK	/ELSE+2 WITH AC=CHAR
	JMP I XCRCHKR


	/IGNORE LEADING SPACES
	/(AC) CAN CONTAIN FIRST CHARACTER

XSPNOR,	0
	SNA
	READ		/READ NEXT CHAR IF NO ARGUMENT
	TAD [-240
	SNA		/SPACE?
	JMP XSPNOR+2	/YES, READ NEXT CHARACTER
	TAD [240	/NO, ADD BACK SPACE
	JMP I XSPNOR	/AND EXIT
	/'RUN' COMMAND
	/RUN <NH> <STARTING LINE NUMBER>

RUN,	KIKOUT		/MAKE SURE THAT MONITOR IS OUT
	JMS NH		/CHECK FOR 'NH'
	JMS PHEAD	/NO 'NH' - PRINT HEADING
	DCA 3		/FILENAME EXT OF 0 = RUN
	ARGS
	NOP
RUN1,	CDF 10
	DCA I (4	/SAVE STARTING LINE NUMBER
	DCA I (21
	JMS I [SYSCLR	/CLEAR SYSTEM TABLES
	JMP RUN2


	/'COMPILE' COMMAND
	/COMPILE <DEV:NAME>
	/.BC IS ALWAYS FILE EXTENSION

COMPL2,	GNAME
	GHNDL
	 JMP NFD	/NON FILE DEVICE - ERROR
	KIKOUT
	TAD DEVNO
	DCA 3		/SAVE DEVICE NUMBER IN FUNDCTION WORD
	CMA
	JMP RUN1


	/'SCRATCH' COMMAND

EALL,	TAD [BUFBEG
	DCA PACKWD	/RESET PACK POINTER AND
	TAD OUJMPE	/CHARACTER NUMBER POINTER
	DCA I [OUJMP	/TO BEGINNING OF TEXT BUFFER
	JMP I [CMODE	/DONE


	/SET CHAR = NEXT CHARACTER IN CBUFF

XGCHAR,	0
	READ
	CLA
	JMP I XGCHAR


	/LIST OF SPECIAL CHARACTERS FOR 'GNAME' ROUTINE

GLST1,	".		/GET FILE EXTENSION
	":		/LOAD DEVICE NAME
	215		/CR - TERMINATOR
	240		/SPACE - TERMINATOR
	",		/, - TERMINATOR
	-1

GLST2,	PER
	LDEV
	TERMIN
	TERMIN
	TERMIN


	/ERROR DURING 'OLD' COMMAND

OER,	KEY
	PRINT; NONUMB	/LINE NUMBERS MISSING
	PFNAME		/PRINT OUT NAME
	TAD 3		/GET FILE EXTENSION
	PFEXT
	TAD [215
	TYPE
	REPLACE		/REPLACE SWITCHES AND BE 'READY'

	PAGE
	/READ ONE CHARACTER FROM KEYBOARD
	/EXIT WITH CHARACTER

LOW,	0
	DCA TYPSW	/MAKE SURE THAT THE CHAR ECHOS
	CDF 10
	ISZ I (15	/FOR RANDOM NUMBERS
	KSF
	JMP .-2
	KRB		/READ SILENTLY
	CDF
	JMP I LOW	/EXIT


	/SEARCH FOR 'NH' IN COMMAND STRING
/	JMS NH
/	-RETURN-	/'NH' NOT FOUND
/	-RETURN-	/'NH' FOUND

NH,	0
	TAD INBUFF	/SAVE BUFFER POINTER IN CASE
	DCA PNTR2	/'NH' IS NOT FOUND.
	TAD (CBUFF
	DCA INBUFF
	TAD CHAR	/CHARACTER MUST ALSO BE SAVED
	DCA PHEAD
	CMA
	DCA RFULL
NHGO,	RTL6
	DCA M1
	UPPER
	CRCHK
	JMP NH2		/NO 'NH' FOUND
	TAD (-":
	SNA CLA
	JMP NH2		/STOP SEARCHING ON A ':'
	TAD CHAR
	AND [77
	TAD M1
	TAD (-1610	/'NH'
	SNA CLA
	JMP NH1		/'NH' FOUND
	TAD CHAR
	AND [77
	JMP NHGO	/KEEP LOOKING

NH2,	TAD PHEAD	/'NH' NOT FOUND
	DCA CHAR	/RESET CHAR
	TAD PNTR2	/AND INBUFF
	DCA INBUFF
	CMA
	DCA RFULL
	JMP I NH	/AND EXIT

NH1,	ISZ NH		/'NH' FOUND
	GCHAR
	JMP I NH	/RETURN +2


	/PRINT HEADING
	/ENTER WITH LOCATION OF NAME IN (AC)

PHEAD,	0
	DCA NH
	TAD [212
	TYPE		/TYPE LINE FEED
	ISZ NH		/WAS (AC) = 7777?
	SKP		/NO, (AC) = LOCATION OF FILE NAME
	JMP PNNAM	/YES, DON'T PRINT NAME
	KIKOUT
	PFNAME
	TAD NAME+3	/EXTENSION
	DCA RINC
	TAD NAME+3
	TAD (-0201	/DON'T PRINT IF .BA
	SZA CLA
	PFEXT	/PRINT EXTENSION
	TAD [240
	TYPE
PNNAM,	CDF 10
	TAD I (7666	/LOCATION WHERE MONITOR STORES DATE
	CDF
	JMS DATE	/PRINT DATE (IF NON-ZERO)
	PRINT; RDING	/'OMSI BASIC'
	TAD [212
	TYPE
	JMP I PHEAD	/DONE


	/SUB TO CONVERT TO UPPER CASE
/	(AC)		/CHAR IN AC (ELSE DEFAULT TO READ)
/	UPPER
/	-RETURN-	/CHAR AND (AC) CONVERTED TO UPPER CASE

XUPPER,	0
	SNA
	READ		/DO A READ IF (AC) = 0
	DCA XR3
	TAD XR3
	CLL
	TAD [-300
	CLA		/CHECK IF LETTER
	TAD XR3
	SZL		/WAS IT A LETTER?
	AND (337	/YES, CONVERT IT
	DCA CHAR	/CONVERT STORED VERSION OF
	TAD CHAR	/THIS CHARACTER, ALSO
	JMP I XUPPER	/EXIT


	/DELETE A LINE FROM THE TEXT BUFFER

XWIPE,	0
	CMA CLL RAL CLA
	TAD UNWD	/BACKUP POINTER BY TWO
	DCA UNWD
	CDF 10
	DCA I UNWD	/LINE IS NOT REALLY GONE,
	CDF		/JUST FAKED OUT.
	JMP I XWIPE	/DONE


	/GET AN ARGUMENT FROM CBUFF
/	ARGS
/	-RETURN-	/NO ARGUMENT IN COMMAND STRING
/	-RETURN-	/ARG IN LINE AND (AC)

XARG,	0
	TAD CHAR
	SKP		/START WITH THE CURRENT CHARACTER
	CLA
	CRCHK
	JMP I XARG	/IF CR, NO ARGUMENT ON THIS LINE
	NUMBCK
	JMP .-4		/NOT A NUMBER, KEEP CHECKING
	DEC		/MAKE AN ARGUMENT
	ISZ XARG	/AND RETURN +2
	JMP I XARG


	/CHECK FOR A NUMBER
/	(AC)		/(AC) CONTAINS CHARACTER
/	NUMBCK
/	-(AC)-		/NOT A NUMBER, (AC) UNCHANGED
/	-(AC)-		/NUMBER, (AC) = (AC) - 260

XNUMB,	0
	DCA T1
	TAD T1
	TAD (-260
	SPA CLA		/CHECK IF A DIGIT
	JMP EXIT0	/NO, RETURN +1
	TAD T1
	TAD (-272
	SMA CLA
	JMP .+3
	ISZ XNUMB	/YES, RETURN +2
	TAD (-260	/SUBTRACT 260 FROM (AC)
EXIT0,	TAD T1
	JMP I XNUMB

	PAGE
	/'SEARCH' COMMAND
	/SEARCH <N<,M> /STRING1/<STRING2/ <L>>

SEARCH,	KIKOUT
	DCA RSW		/RESET ALL SWITCHES
	TAD (JMP ARG2ER
	DCA ERRSW
	CMA
	TAD INBUFF	/BACKUP ONE CHARACTER
	DCA INBUFF
	CMA
	DCA RFULL
	CMA RAL CLL
	DCA LARG2	/4094 IS ASSUMED AS LAST LINE TO SEARCH
	IAC
	DCA BOTTOM	/WHILE LINE 1 IS ASSUMED AS FIRST
	CARET		/CR ILLEGAL HERE
	NUMBCK
	JMP GG		/NO ARGUMENT,ASSUME WHOLE BUFFER
	DEC		/FORM LINE NUMBER ARGUMENT
	DCA BOTTOM	/FIRST ARGUMENT IS FIRST LINE TO SEARCH
	TAD BOTTOM
	DCA LARG2	/IF NO SECOND ARG,
	CRCHK		/FIRST LINE IS ALSO LAST LINE
	JMP ARGER
	CARET		/CR STILL ILLEGAL
	NUMBCK
	JMP GG		/NO SECOND ARG,PROCEED WITH SEARCH
	DEC
	DCA LARG2	/SECOND ARGUMENT IS LAST LINE TO SEARCH
	CARET		/CR STILL ILLEGAL
GG,	DCA TSAVE	/TERMINATOR FOR STRINGS
	TAD TSAVE
	CIA		/SAVE NEGATIVE TERMINATOR ALSO
	DCA MSAVE
	TAD INBUFF
	DCA INSAVE	/SAVE POINTER TO START OF TARGET STRING
	CLA
	JMS CREAD
	SKP		/CHECK FOR CORRECT NUMBER OF ARGS
	JMP .-3
	SPNOR
	CRCHK		/NEXT CHAR CR??
	JMP CONT-2	/YES,FUNCTION AS A LOCATE
	CMA CLA
	TAD INBUFF
	DCA INBUFF	/BACKUP ONE CHARACTER
	CLA
	JMS CREAD
	SKP		/CHECK FOR THIRD TERMINATOR
	JMP .-3
	SPNOR		/FOUND IT
	CRCHK		/FOLLOWED BY A CR?
	ISZ RSW		/YES,DO NOT LIST LINES AS WE SEARCH THEM
	CMA CLA
	DCA RFULL	/RESET CR SWITCH
CONT,	DCA SRCHSW
	TAD BOTTOM
	FINDLN		/FIND FIRST LINE
	SZA
	SKP CLA
	 JMP I [CMODE	/ALL IS FINISHED (WE HOPE)
	TAD T1
	CIA CLL
	TAD LARG2	/THROUGH??
	SNL CLA
	 JMP I [CMODE	/YES, EXIT
	ISZ SRCHSW	/INDICATE TO XPACK ERROR ROUTINES
	TAD T1		/THAT WE ARE IN SEARCH MODE
	DCA BOTTOM
	TAD T1
	STOLN		/STORE LINE NUMBER
SCONT,	CMA
	DCA SW2		/RESET SWITCH
	TAD INSAVE
	DCA INBUFF	/LOOK AT TARGET STRING
	DCA TAL
	JMS CREAD
ERRSW,	HLT		/EITHER JMP ARGER OR JMP FOUND
	DCA M1
	TAD (JMP FOUND
	DCA ERRSW
GQXXGQ,	JMS CRUN	/CRUN SKIPS OUT IF CR UNPACKED
	CIA
	TAD M1		/MATCH?
	SZA CLA
	JMP SKZOO	/NO,RESTART
	ISZ SW2		/YES,FIRST CHAR?
	JMP SCONT+5	/NO
	TAD UNWD	/FIRST CHAR FOUND - TRY NEXT
	DCA WDSAVE	/SAVE UNPACK POINTERS IN CASE
	TAD INFPTR
	DCA STEMP
	TAD ICHLV	/OF FALSE ALARM
	DCA HFSAVE
	TAD M1
	DCA TAL		/STORE CHARACTER IN CASE CR IS NEXT CHAR
	JMP SCONT+5

SKZOO,	ISZ SW2		/FIRST CHAR?
	JMP .+6		/NO
	TAD PNTR2	/YES,PACK CHARACTER
	PACK
	CMA		/RESET FIRST CHAR SWITCH
	DCA SW2
	JMP GQXXGQ	/AND CONTINUE
	TAD WDSAVE	/NO MATCH - RESTORE PNTRS
	DCA UNWD
	TAD STEMP
	DCA INFPTR
	TAD HFSAVE
	DCA ICHLV
	TAD TAL
	PACK		/PACK THAT LAST CHAR
	CMA
	DCA RFULL	/RESET CR SWITCH
	JMP SCONT	/CONTINUE WITH LINE

TSAVE,	0		/TEMP STORAGE FOR SEARCH
MSAVE,	0
FSW,	0
SW2,	0
INSAVE,	0
WDSAVE,	0

	PAGE
FOUND,	ISZ FSW		/BUMP LISTING CONTROL SWITCH
	CRCHK		/CHECK FOR SE /STRING/<CR> FORMAT
	JMP FUDG12
	TAD MSAVE	/NOW PACK REPLACEMENT STRING
	SNA CLA
	JMP SCONT
	TAD CHAR
	PACK		/PACK THIS CHAR
	JMS CREAD	/READ AND CHECK FOR TERMINATOR
	SKP CLA		/EXIT LOOP IF TERMINATOR
	JMP .-3		/ELSE CONTINUE PACKING
	JMP SCONT	/PROCESS REST OF LINE

FUDG12,	CMA
	TAD PACKSV	/DELETE THE SECOND LINE
	DCA PACKWD	/SEARCH STRING<CR> ACTS AS A LOCATE COMMAND
	JMP LISFND	

CREAD,	0		/READ AND CHECK FOR TERMINATOR
	CRCHK		/CR MEANS ERROR
	JMP ARGER
	TAD MSAVE	/SUBTRACT TERMINATOR
	SNA
	JMP .+3
	TAD TSAVE	/OTHER - RET. +2
	ISZ CREAD
	JMP I CREAD

CRUN,	0		/UNPACK AND EXIT LOOP IF CR
	UNPACK
	DCA PNTR2
	TAD PNTR2
	CRCHK		/CR?
	SKP		/YES
	JMP I CRUN	/NO, EXIT WITH CHARACTER IN (AC)

	TAD FSW
	SZA CLA
	JMP CRUN1
	TAD OUJMPE
	DCA I [OUJMP
	CMA
	TAD PACKSV
	DCA PACKWD
	JMP LIZ25

CRUN1,	TAD TAL
	SZA
	PACK
	ISZ SW2
	SKP	
	JMP OUTOFIT	/TRICKY LITTLE BUG WE MUST FIX
	TAD WDSAVE
	DCA UNWD
	TAD HFSAVE
	DCA ICHLV
	UNPACK
	CRCHK
	JMP OUTOFI
	PACK
	JMP .-4

OUTOFI,	TAD [215
	PACK
	TAD T1		/DELETE OLD VERSION OF LINE
	FINDLN
	HLT
	WIPE
LISFND,	CLA
	TAD RSW
	SZA CLA
	JMP LIZ25
	TAD T1
	FINDLN
	HLT
	JMS LISTLN
LIZ25,	ISZ BOTTOM
	DCA FSW
CRUNBN,	DCA TAL
	DCA PNTR2
	CMA
	DCA RFULL
	JMP CONT

ARG2ER,	CLA CMA		/DELETE-LAST-LINE-LOOKED
	TAD PACKSV	/AT-KLUDGE
	DCA PACKWD
ARGER,	DCA SRCHSW
	PRINT; ARG	/TOO FEW ARGS
	JMP I [CMODE
	/TYPE OUT TODAYS DATE
	/ENTER WITH DATE IN (AC)

DATE,	0
	SNA
	JMP I DATE	/NO DATE - EXIT
	DCA CREAD
	TAD (NLSP	/DON'T PRINT LEADING SPACES
	DCA XPSW2	/IN PLINE
	TAD [240
	TYPE
	TAD CREAD
	RTL6
	RAR CLL		/UN SCRAMBLE DATE
	AND (17
	PLINE		/PRINT MONTH
	TAD ("/
	TYPE
	TAD CREAD
	RTR CLL
	RAR
	AND (37
	PLINE		/DAY
	TAD ("/
	TYPE
	TAD CREAD
	AND (7
	TAD (106	/YEAR-70
	PLINE		/PRINT YEAR
	JMP I DATE

	PAGE
/CATALOG COMMAND - LIST ALL BASIC FILES WITH DATES AND LENGTH

CAT,	JMS I [NH	/TEST FOR 'NH'
	 SKP		/'NH' NOT FOUND
	JMP NH0		/'NH' FOUND - DON'T PRINT HEADING
	CMA
	JMS I (PHEAD	/PRINT HEADING
	CMA
NH0,	DCA HFSAVE	/SET SWITCH FOR LATER USE
CATNXT,	DCA KIN
	TAD (PSPACE	/PRINT TRAILING SPACES AFTER FILENAME
	DCA I (NTSP
	GNAME
	GHNDL
	 JMP NFD	/NOT A FILE DEVICE
	IAC		/DIRECTORY STARTS IN
	DCA CATBLK	/FIRST BLOCK
CAT2,	TAD CATBLK
	SNA CLA
	JMP CATDNE	/ZERO BLK MEANS WE'RE DONE
	JMS I INHNDL	/READ DIRECTORY BLK
	200
	OUBUF		/INTO OUBUFF
CATBLK,	0
	JMS I [INERRX	/ERROR
	TAD (OUBUF-1
	DCA XR3		/RESET POINTER
	TAD I XR3	/NUMBER OF ENTRIES IN DIRECTORY
	SNA		/ZERO??
	JMP CATDNE	/YES,DONE
	DCA XTEMP	/NO,STORE FOR REFERENCE
	ISZ XR3		/GARBAGE WORD WE DON'T NEED
	TAD I XR3	/STORE NEXT BLOCK NUMBER
	DCA CATBLK
	ISZ XR3		/SKIP MORE GARBAGE
	TAD I XR3
	DCA M1		/NUMBER OF EXTRA WORDS PER ENTRY
CATGO,	TAD I XR3
	SNA CLA		/ZERO?
	JMP FFILE	/YES,AND <EMPTY> FILE
	TAD XR3
	DCA XR1		/IN THIS CASE JUST A TEM REGISTER
	ISZ XR3
	ISZ XR3
	TAD I XR3	/CHECK EXTENSION
	DCA RINC
	TAD M1
	CIA
	TAD XR3
	DCA XR2
	TAD I XR2	/IF LENGTH IS ZERO, THEN FILE
	SZA CLA		/IS TENTATIVE
	TAD RINC
	SORT		/FOR POSSIBLE EXTENSIONS
	 CLT1
	 CLT2-CLT1
	TAD XR2
	DCA XR3
	JMP CHKCAT

CBAS,	TAD XR1
	PFNAME		/PRINT OUT OUR BASIC FILENAME
	PFEXT		/PRINT FILE EXTENSION
	TAD M1
	SNA CLA		/ANY EXTRA WORDS??
	JMP CHKC	/NO
	TAD I XR3	/YES, FIRST IS DATE
	DCA KIN
	TAD M1
	CMA		/NOW SKIP OVER REST OF WORDS IN ENTRY, IF ANY
	TAD XR3
	DCA XR3
CHKC,	TAD HFSAVE	/TEST FOR 'CAT NH'
	SNA CLA
	 JMP CATNH	/DON'T PRINT LENGTH, AND DATE
	TAD (PLSP	/PRINT LEADING SPACES
	DCA XPSW2	/IN PLINE
	TAD I XR3
	CIA		/DIRECTORY LENGTH IS NEGATIVE
	PLINE		/PRINT LEADING SPACES
	TAD KIN
	JMS DATE	/PRINT DATE (IF NON-ZERO)
	TAD [215
	TYPE
CHKCAT,	ISZ XTEMP	/LAST OF ENTRIES IN THIS BLOCK?
	JMP CATGO	/NO,CONTINUE
	JMP CAT2	/YES,READ NEXT BLOCK

CATNH,	ISZ XR3
	JMP CHKCAT-2

FFILE,	ISZ XR3		/SKIP OVER FREE FILE ENTRY
	JMP CHKCAT

CATDNE,	TAD [212
	TYPE
	TAD CHAR
	TAD [-215
	SNA CLA
	REPLACE		/DONE
	GCHAR		/LIST ANOTHER DEV:
	JMP CATNXT

XPFEXT,	0		/PRINT FILE EXTENSION
	SZA		/FILE EXTENSION IN (AC)?
	DCA RINC	/YES, SAVE IT
	TAD (256
	TYPE
	TAD RINC
	RTL6
	RAL
	JMS ONE
	TAD RINC
	JMS ONE
	JMP I XPFEXT	

KIN,	0		/GET USR
	TAD USR
	SMA CLA
	JMP I KIN	/USR IS ALREADY IN CORE
	CIF 10
	JMS I USR
	10
	TAD [200	/NOW CALL USR AT 10200
	DCA USR
	JMP I KIN	/EXIT

	PAGE
/SAVE, NSAVE, REPLACE, NREPLACE, LIST, AND NLIST COMMANDS

NSAVE,	JMS NOLINE	/SAVE WITHOUT LINE NUMBERS
SAVE,	DCA PRHEAD	/NEVER PRINT HEADING
	GNAME
	TAD DEVNM
	SNA CLA		/'LIST' WITHOUT 'DEV:NAME'?
	JMP LIST0	/YES, TTY: IS OUTPUT DEVICE
	GHNDL
	 JMP REP0	/NON FILE DEVICE - DN'T LOOKUP
	DCA SPNT	/POINTER TO FILE NAME
	TAD DEVNO
	CIF 10
	JMS I USR
	2		/LOOKUP NAME
SPNT,	0		/POINTER TO NAME
	0		/USELESS LENGTH WORD
	 JMP REP0	/NOT FOUND - OK TO SAVE
	PFNAME		/FOUND - ERROR
	TAD 3
	PFEXT		/PRINT FILE EXTENSION
	PRINT; SAVED
	REPLACE

NREP,	JMS NOLINE	/REPLACE WITHOUT LINE NUMBERS
REP,	GNAME
	GHNDL
L7200,	 7200		/NOP
	DCA PRHEAD	/NEVER PRINT HEADING
	TAD DEVNO
	CIF 10
	JMS I USR
	4		/DELETE OLD COPY OF FILE SO THAT
	0		/IT WILL GET SAVED IN THE SAME
	0		/FILE SLOT.
	 NOP		/OK IF IT WASN'T FOUND
REP0,	DCA SBLK	/POINTER TO NAME
	JMS I (LENS	/CALCULATE LENGTH
	TAD RTEMP	/NUMBER OF BLOCKS
	RTL CLL
	RTL
	TAD DEVNO
	CIF 10
	JMS I USR
	3		/ENTER FILE
SBLK,	0		/POINTER TO NAME AND FIRST BLOCK
SLEN,	0		/NEGATIVE LENGTH OF FILE
	 DEVER
	DCA OUCCNT	/NUMBER OF RECORDS IN FILE
	TAD SBLK	/FIRST BLOCK OF FILE
	DCA OUREC
	TAD (PACK02
	DCA ODEV	/OUTPUT TO OBUFF
	TAD L7200	/-600
	DCA SWC		/600 CHARS/BUFFER
	TAD (OUBUF
	DCA RTEMP2
	DCA PFIELD	/WE ARE PACKING INTO FIELD 0
	TAD PRHEAD
	DCA .+1
	HLT		/OUTPUT HEADING ALWAYS
	DCA PRHEAD	/BUT ONLY ONCE!
LIST0,	KIKOUT		/'PUNCH' ENTERS HERE
	IAC
	DCA M1		/1 = LOWER LIMIT
	CMA CLL RAL
	DCA BOTTOM	/UPPER LIMIT
	GARGS		/GET ARGUMENTS
PRHEAD,	HLT		/PRINT HEADING, IF O ARGS
	JMP LIST1

	JMS I [LISTLN
	IAC
LIST1,	TAD M1
	FINDLN
	CLA
	TAD T1		/CHECK IF NUMBER IS IN RANGE
	DCA M1
	TAD M1
	CLL CIA
	TAD BOTTOM
	SZL CLA
	JMP LIST1-2	/YES, LIST IT
	TAD [212	/DONE WITH THIS SECTION
	TYPE
	GARGS		/GET NEXT SET OF ARGUMENTS
	SKP		/NO ARGS - DONE
	JMP LIST1
PEND,	0		/OR JMS I [LEAD  FOR PUNCH
	TAD ODEV
	TAD (-XTYPE
	SNA CLA
	REPLACE		/OUTPUT ON TERMINAL - DON'T CLOSE
	TAD [232	/OUTPUT ON FILE - CLOSE IT
FILLP,	JMS PACK02	/INSERT ^Z
	TAD SWC		/FILL REST OF BUFFER WITH ZEROES
	TAD [600	/BUFFER FULL?
	SZA CLA
	JMP FILLP	/NO, CONTINUE FILLING
	TAD DEVNO
	CIF 10
	JMS I USR
	4		/CLOSE OUTPUT FILE
	0
OUCCNT,	0		/NUMBER OF BLOCKS USED
	 DEVER
	REPLACE		/DONE

NLIST,	JMS NOLINE	/'LIST' WITHOUT LINE NUMBERS
LIST,	JMS I [NH	/TTY: IS DEFAULT DEVICE FOR LIST
	TAD (JMS PHEAD	/RETURN +1 - PRINT HEADING
	DCA PRHEAD	/RETURN +2 - NO HEADING
	TAD (-0423	/-DS
	JMP SAVE+1

	SWC=RNUMB	/TEMPORARY

	PAGE
	/OLD DEV:NAME.EX N,M

OLD,	CMA
OVLAY,	DCA XTEMP	/OVERLAY - DON'T SCRATCH
	RNAME		/ASK FILE NAME IF ONE IS NOT ENTERED
	 OLDT		/"OLD FILE NAME--"
	DCA STBLK	/POINTER TO NAME
	GHNDL		/GET DEVICE HANDLER
	 NOP		/NON FILE DEVICE
	TAD DEVNO
	CIF 10
	JMS I USR
	2		/LOOKUP FILE
STBLK,	0		/POINTER TO NAME & FIRST BLOCK
	0		/LENGTH (NEGATIVE)
	 JMP NFILE	/FILE NOT FOUND
	JMS PSAVE	/MAKE NAME PERMENANT
	DCA UNFLD	/UNPACK FROM FIELD 0
	TAD [ICHAR1	/RESET UNPACK ROUTINE
	DCA ICHLV	/TO FIRST CHARACTER
	CMA
	DCA INCHCT	/READ NEW RECORD BEFORE UNPACKING
	TAD STBLK
	DCA INREC
	ISZ XTEMP
	JMP .+5		/OVERLAY - DON'T SCRATCH BUFFER
	TAD [BUFBEG	/'OLD' SCRATCH BUFFER
	DCA PACKWD
	TAD OUJMPE
	DCA I [OUJMP
	CLA CMA
	TAD INBUFF
	DCA INBUFF
	TAD (ICHAR
TAPGO,	DCA TEMP	/ENTRY OF 'TAPE' COMMAND
	DCA RINC
	KIKOUT
	ARGS		/CHECK FOR ARGUMENTS
	JMP NOLN	/NONE, DON'T ADD LINE NUMBERS
	DCA RSTART	/FIRST ARG IS STARTING LINE NUMBER
	ARGS		/GET INCREMENT
	TAD (12		/10 IS DEFAULT INCREMENT
	DCA RINC
	TAD (JMP LADD	/SWITCH TO ADD LINE NUMBERS
NOLN,	DCA GETNXT
	TAD TEMP
	DCA IDEV	/INPUT FROM FILE NOW
GETNXT,	HLT		/0 OR JMP LADD
	SPNOR
	CRCHK
	JMP .-2		/IGNORE NULL LINES
	NUMBCK		/IS FIRST CHAR A NUMBER?
	 JMP OER	/NO, ERROR - NO LINE NUMBERS
	DEC		/YES, CONVERT TO OCTAL
	CLA
	TAD CHAR
	TAD [-240	/IGNORE ONE LEADING SPACE
	SNA CLA
	GCHAR		/GET NEXT CHAR
	JMP LADD+3

LADD,	GCHAR
	TAD RSTART	/ADD A LINE NUMBER
	DCA LINE
	TAD UNWD	/FINDLN WILL UNSET
	DCA HFSAVE	/UNWD AND ICHLV
	TAD ICHLV
	DCA XTEMP
	TAD LINE
	FINDLN		/LINE ALREADY IN TEXT BUFFER?
	SKP CLA		/NO
	WIPE		/YES, DELETE OLD COPY
	TAD HFSAVE
	DCA UNWD	/RESET UNWD AND ICHLV
	TAD XTEMP
	DCA ICHLV
	TAD LINE
	STOLN		/PUT LINE NUMBER INTO BUFFER
	TAD CHAR
	SKP
	READ		/COPY LINE INTO BUFFER
	PACK
	TAD CHAR
	TAD [-215
	SZA CLA
	JMP .-5
	CLL		/STOP ON CR
	TAD RSTART
	TAD RINC	/COMPUTE NEXT LINE NUMBER
	SZL
	 JMP RESER	/SEQUENCE NUMBER OVERFLOW
	DCA RSTART
	JMP GETNXT

NFILE,	PFNAME		/FILE NOT FOUND
	TAD 3
	PFEXT		/PRINT FILE EXTENSION
	PRINT; OLDERR
	REPLACE

	/INPUT ONE CHARACTER FROM FILE

ICHAR,	0
	CLA
	ISZ INCHCT	/ANY CHARS LEFT IN BUFFER?
	JMP OUN		/YES, UNPACK
	JMS I INHNDL	/NO, GET NEXT BUFFER
	200		/READ 2 PAGES
INBUFP,	INBUF		/INTO INBUFF
INREC,	0		/RECORD NUMBER
	 JMS I [INERRX	/INPUT ERROR
	ISZ INREC
	TAD [-600
	DCA INCHCT	/RESET CHARACTER COUNT
	TAD INBUFP
	DCA UNWD	/ICHLV RESETS ITSELF

OUN,	UNPACK
	DCA CHAR
	TAD CHAR
	SORT		/CHECK FOR SPECIAL CHARS
	 ILST1
	 ILST2-ILST1
	TAD CHAR
	JMP I ICHAR	/EXIT WITH CHAR IN (AC)

INCHCT,	0		/-NUMBER OF CHARS IN INBUFF

	PAGE
	/'UNSAVE' COMMAND
	/UNSAVE DEV:NAME.EX, DEV2:NAME2.EX, ETC.

UNSAVE,	DCA NOLINE	/COUNT FILES DELETED IN CASE OF ERROR
	RNAME; UNUL	/ONLY ASK 'FILENAME--'
UNGET,	GHNDL		/GET DEVICE HANDLER
	 JMP NFD	/NOT A FILE DEVICE
	TAD DEVNO
	CIF 10
	JMS I USR
	4		/CLOSE FILE - DELETE
	NAME		/POINTER TO NAME
UNUL,	0		/LENGTH - 0
	 JMP UER	/ERROR DELETING FILE
	ISZ NOLINE	/WE HAVE SUCCESSFULLY DELETED ONE
	TAD INBUFF	/FILE.
	DCA PACK0
	JMS PGET	/SO FILE NAME DOESN'T CHANGE
	TAD I PACK0
	CRCHK
	 JMP I [CMODE	/DONE - CR
	GCHAR		/GET NEXT CHARACTER
	GNAME		/GET DEV:NAME.EX
	JMP UNGET	/MORE FILES TO DELETE

UER,	PRINT; EDF	/ERROR DELETENG FILE
	TAD NOLINE
	IAC
	PLINE		/PRINT NUMBER
	TAD [215
	TYPE
	JMP I [CMODE

NFD,	PRINT; NFDT	/NOT A FILE DEVICE
	REPLACE
	/DON'T PRINT LINE NUMBERS ON
	/NSAVE, NREP, NLIST, AND NPUNCH

NOLINE,	0
	TAD (LIN1&177+5200
	DCA I [LISTLN+3
	JMP I NOLINE


/LIST OF SPECIAL CHARACTER FOR KEYBOARD INPUT ROUTINE

SPC2,	CRLF		/CR
	BACK		/<-
	LFL		/LF
	DELETE		/^U
	RUBIT		/RUB OUT		
	EFF		/^L
	KEY1		/^Z
	EBELL		/^G
	EFND		/SEARCH CHAR FOR 'EDIT' COMMAND
	GOODBYE		/^C
	XRGO		/^O
	CNTRLP		/^P


	/LIST OF BASIC EXTENSIONS:

CLT1,	0222		/BR - RANDOM ACCESS
	0401		/DA - SERIAL ASCII DATA
	0203		/BC - COMPILED PROGRAMS
	0201		/BA - BASIC SAVED PROGRAMS
	-1


	/SUB TO CHECK FOR CR

XCARET,	0
	SPNOR
	CRCHK
	JMP I (ERR	/GIVE ERROR IF ONE IS FOUND
	JMP I XCARET	/NOT A CR
	/3 FOR 2 PACKING ROUTINE
	/ENTER WITH CHARACTER IN (AC)

PACK0,	0
	AND (377	/STRIP TO 8 BITS
	DCA PCHAR	/STORE TEMPORARILY
PFIELD,	CDF 10
	ISZ OUJMP
OUJMP,	JMP .
	JMP OCHAR1
	JMP OCHAR2

	TAD PCHAR	/THIRD CHAR
	CLL RTL; RTL	/GET INTO TOP OF WORD
	AND (7400
	TAD I OUPOLD	/SPLIT TOP 4 BITS INTO WORD 1
	DCA I OUPOLD
	TAD PCHAR
	CLL RTR
	RAR
	RTR
	AND (7400	/SPLIT BOTTOM 4 BITS INTO WORD 2
	TAD I PACKWD
	DCA I PACKWD
	TAD OUJMPE
	DCA OUJMP	/RESET JUMP POINTER
	ISZ PACKWD
	JMP PEXIT	/EXIT

OCHAR2,	TAD PACKWD
	DCA OUPOLD	/SAVE POINTER FOR THIRD CHAR
	ISZ PACKWD

OCHAR1,	TAD PCHAR	/SET FIELD
	DCA I PACKWD	/SAVE CHARACTER IN BUFFER
PEXIT,	CDF
	JMP I PACK0	/EXIT

PCHAR,	0
OUPOLD,	0		/TEMPORARY
	/3 FOR 2 UNPACKING ROUTINE
	/EXIT WITH CHRACTER IN (AC)

UNPAC0,	0
	CLA
UNFLD,	CDF 10		/CHANGED BY 'OLD' COMMAND
	JMP I ICHLV	/1ST, 2ND, OR 3RD CHAR?

ICHAR1,	TAD I UNWD	/1ST CHAR
	JMS ICHLV

	TAD I UNWD	/2ND CHAR
	AND (7400	/SAVE TOP 4 BITS FOR 3RD CHAR
	DCA INFPTR
	ISZ UNWD
	TAD I UNWD
	JMS ICHLV	/AND EXIT

	TAD I UNWD	/3RD CHAR
	ISZ UNWD
	AND (7400	/BOTTOM 4 BITS OF 3RD CHAR
	CLL RTR; RTR
	TAD INFPTR	/ADD IN 4 UPPER BITS
	RTR; RTR
	JMS ICHLV	/AND EXIT
	JMP ICHAR1

ICHLV,	0		/COMMON UNPACK STUFF
	AND [177
	TAD (200	/IGNORE PARITY AND TECO TEXT
	CDF
	JMP I UNPAC0

INFPTR,	0

	PAGE
	/PACK A CHARACTER INTO TEXT BUFFER
	/ENTER WITH CHARACTER IN (AC)

XPACK,	0
	DCA ENDLN	/SAVE CHARACTER TEMPORARILY
	CLL
	TAD PACKWD
	TAD BUFEND	/BUFFER FULL??
	SNL CLA
	JMP XPACK1	/NO, PACK CHARACTER
	JMS FIGLN	/DETERMINE LENGTH OF LINE FOR KILL
	KILL		/TRY TO GAIN SOME CORE
	JMP XPACK2
	JMS ENDLN	/OUT OF ROOM - PACK CR
KILLSW,	0		/ENDLN ALLWAYS RETURNS .+2
	TAD SRCHSW
	SNA CLA		/IN SEARCH?
	JMP .+4		/NO
	CMA		/YES, DELETE NEW COPY OF LINE
	TAD PACKSV	/THAT WE WERE SEARCHING.
	DCA PACKWD
XPACK3,	KEY		/MAKE SURE THAT ERROR PRINTS ON TTY:
	PRINT; OFULL	/'TEXT BUFFER IS FULL'
	REPLACE

XPACK2,	TAD SRCHSW	/IT FOUND SOME MORE CORE
	SNA CLA		/SEE IF WE CAME FROM SEARCH
	JMP XPACK1	/NOW PACK CHARACTER
	TAD OUJMPE
	DCA I [OUJMP	/YES,WE MUST START CURRENT LINE OVER
	CMA
	TAD PACKSV
	DCA PACKWD	/DESTROY NEW VERSION OF CURRENT LINE
	JMP CRUNBN-1	/CONTINUE WITH SEARCH

XPACK1,	TAD ENDLN	/PACK CHARACTER
	CRCHK
	 JMS ENDLN	/CR IS SPECIAL
	JMS PACK0
	JMP I XPACK

ENDLN,	0		/SUB TO PACK A CR
	TAD [215
	JMS PACK0
	TAD OUJMP
	TAD (-OUJMPF
	SZA CLA
	ISZ PACKWD	/BUMP PACKWD
	JMS FIGLN	/STORE LENGTH OF LINE
	TAD OUJMPE	/RESET DISPATCH JMP
	DCA I [OUJMP
	ISZ ENDLN
	JMP I ENDLN	/ALWAYS RETURN .+2
	/DETERMINE AND STORE LINE LENGTH

FIGLN,	0
	TAD PACKSV
	CIA
	TAD PACKWD
	DCA TAL		/NEEDED FOR RESEQ RECOVERY AFTER KILL
	TAD TAL
	CDF 10
	DCA I PACKSV
	CDF
	JMP I FIGLN
 
OUJMPF=OUJMP&177+5200	/"JMP OUJMP" - LAST CHAR WAS THIRD CHAR


	/STORE A LINE NUMBER IN THE TEXT BUFFER
	/ENTER WITH NUMBER IN (AC)

XSTOLN,	0
	CDF 10	
	DCA I PACKWD
	ISZ PACKWD
	CDF
	TAD PACKWD	/SAVE POINTER TO LENGTH WORD
	DCA PACKSV
	ISZ PACKWD
	JMP I XSTOLN	/EXIT


	/NO ECHO TYPE OUT ROUTINE

NULL,	0	
	CLA
	JMP I NULL	/THAT WAS EASY
	/CLEAN UP TEXT BUFFER
/	KILL
/	-RETURN-	/THERE WORE NO DELETED LINES
/	-RETURN-	/SACE GAINED
/
	/NOTE - IF 'RESW' # 0, KILL WILL JUMP 
	/TO 'RESKIL' UPON EXIT (USED BY 'RESEQUENCE')

XKILL,	0
	TAD PACKSV	/SPECIAL PATCH FOR SAVE
	CIA		/READJUST THE POINTER TO THE
	TAD PACKWD	/"OLD" END OF BUFFER
	CIA		/SINCE IT WILL CHANGE AFTER WE HAVE
	DCA XWIPE	/SUCCESSFULLY KILLED SOME DEAD LINES
	TAD [BUFBEG
	DCA UNWD
	DCA KILLSW
	TAD [BUFBEG-1
	DCA XR1		/SET THE TWO POINTERS TO FRONT OF BUFFER
	CDF 10		/TEXT IN FIELD 1
XKILL2,	TAD PACKWD	/CHECK FOR END OF BUFFER
	CIA CLL
	TAD UNWD
	SNL CLA
	JMP XKIL22
 	TAD KILLSW	/WERE THERE ANY DEAD LINES?
	SNA CLA
	ISZ XKILL	/NO,SKIP A LOCATION
	CDF
	TAD XR1
	IAC
	DCA PACKWD
	TAD XWIPE	/NOW CALCULATE WHERE THE NEW
	TAD PACKWD	/POINTER TO THE OLD END OF BUFFER
	DCA PACKSV	/IS SO SEARCH WILL NOT KILL ITSELF
	TAD RESW	/COMMING FROM RESEQ?
	SZA CLA
	JMP I (RESKIL	/YES - NEED SOME FUDGES
	JMP I XKILL	/AND EXIT

XKIL22,	TAD I UNWD	/CHECK LINE NUMBER
	SNA CLA
	JMP XKILL3	/IF "DEAD" LINE, THEN SKIP OVER
	TAD I UNWD
	DCA I XR1
	ISZ UNWD	/STORE LINE NUMBER AND BUMP POINTER
	TAD I UNWD
	CIA		/WORD COUNT ON THIS LINE
	DCA M1
	TAD I UNWD
	ISZ UNWD	/RESTORE REST OF LINE
	DCA I XR1
	ISZ M1
	JMP .-4
	JMP XKILL2	/GET A NEW LINE

XKILL3,	ISZ UNWD	/BUMP OUR POINTER
	TAD I UNWD	/NUMBER OF WORDS IN THIS LINE
	TAD UNWD	/ADD POINTER
	DCA UNWD	/AND CALCULATE NEW POINTER
	ISZ KILLSW	/INDICATE THAT THERE WAS AT LEAST 1
	JMP XKILL2	/"DEAD" LINE IN THE BUFFER

	PAGE
/ROUTINE TO INPUT ONE LINE FROM THE KEYBOARD OR PTR:

XREAD,	0
	CLA		/JUST IN CASE
	ISZ RFULL	/HAVE WE READ ANYTHING?
	JMP RLINE	/NO, READ NEW LINE
	TAD I INBUFF	/YES, GIVE THE NEXT CHAR TO THE PROGRAM
	DCA CHAR
	TAD CHAR
	TAD [-215	/CR?
	SZA CLA	
	CMA		/NO
	DCA RFULL	/YES, CLEAR RFULL
	TAD CHAR
	JMP I XREAD	/EXIT WITH CHAR IN AC AND CHAR

RLINE,	TAD [CBUFF-1	/READ CHARACTERS UNTIL CR
	DCA INBUFF	/RESTORE BUFFER
	DCA PROTEC	/RUBOUT PROTECTION
	DCA RSW		/RUBOUT SWITCH - FOR "\"ES
XRGO,	JMS I DEV	/EITHER LOW OR HIGH
	AND [177
	SNA
	JMP .-3		/IGNORE NULLS
	TAD [200	/MASK OUT PARITY
	DCA C1
	TAD C1
	SORT		/SPECIAL CHARACTER??
	 SPC1
	 SPC2-SPC1
ECONT,	ISZ RSW		/NO,PRINT "\" IF NEEDED
	SKP
	JMS SLASH
	TAD C1
	TYPE		/ECHO ECHO-ABLE CHARACTERS
	TAD C1
	DCA I INBUFF	/STORE IN BUFFER
	ISZ PROTECT
	TAD PROTECT
	TAD [-200	/MAX LENGTH IS 200 CHARS
	SZA CLA		/OVER?
	JMP XRGO	/NO, CONTINUE
	KEY		/YES, RESTORE OUTPUT TO TTY:
	PRINT; TLONG	/"LINE TOO LONG"
	JMP RLINE	/READ ANOTHER LINE

CRLF,	ISZ RSW		/CR READ
	SKP
	JMS SLASH	/PRINT CLOSING "\" IF NECESSARY
	TAD [215
	DCA I INBUFF	/STORE CR IN INBUFF
	TAD [215
	TYPE		/ALSO ECHO IT AND A LF
	TAD [CBUFF-1
	DCA INBUFF	/RESET BUFFER POINTER FOR NEXT LINE
	JMP XREAD+4	/FINALLY, GIVE THE FIRST CHAR TO THE PROGRAM

GOODBYE,PRINT		/HE IS LEAVING US!
	BYE		/SAY BYE-BYE
	TSF
	JMP .-1		/WAIT FOR TTY: TO DIE
	JMP I [7600	/AND GO BACK TO MONITOR

DELETE,	ISZ RSW		/^U
	SKP
	JMS SLASH	/PRINT "\" IF NECESSARY
	PRINT		/PRINT "DELETED" TO
	GONE		/REASURE HIM THAT WE GOT RID OF THE LINE
	JMP RLINE	/READ THE LINE OVER AGAIN

SLASH,	0		/SUB TO PRINT A "\"
	TAD ("\
	TYPE
	JMP I SLASH

RUBIT,	TAD PROTECT	/RUBOUT TYPED
	SNA CLA		/DO WE HAVE SOMETHING TO RUB OUT?
	JMP LFL		/NO, DON'T BOTHER ME THEN
	ISZ RSW
	JMS SLASH	/PRINT "\" ON 1ST RUBOUT
	CMA
	DCA RSW		/DON'T PRINT "\" UNTIL NON-RUBOUT TYPED
	CMA
	TAD INBUFF	/BACKSPACE ONE CHARACTER
	DCA INBUFF
	TAD I INBUFF
	TYPE		/ALSO TYPE THE CHARACTER FOR HIM
RUB2,	CMA		/BACKSPACE ONE CHARACTER IN THE BUFFER
	TAD INBUFF
	DCA INBUFF
	CMA		/SUBRACT ONE FROM THE NUMBER OF CHARACERS
	TAD PROTECT	/WHICH CAN BE RUBBED OUT.
	DCA PROTECT	/ALL THIS FOR ONE RUBOUT
	JMP XRGO
LFL,	ISZ RSW		/LF TYPED - ECHO LINE
	SKP
	JMS SLASH	/PRINT CLOSING SLASH IF NEEDED
	TAD INBUFF
	DCA C1
	TAD [CBUFF-1
	DCA INBUFF
	TAD [215
	TYPE		/START WITH CR
	TAD C1
	CIA
	TAD INBUFF	/AT END OF BUFFER?
	SNA CLA
	JMP XRGO	/YES, READ SOME MORE CHARS
	TAD I INBUFF	/NO, TYPE OUT CHARACTER
	TYPE
	JMP .-7

BACK,	TAD PROTECT	/<-
	SNA CLA
	JMP LFL		/NOTHING TO BACKARROW
	TAD C1
	TYPE		/TYPE AN UNDERLINE
	JMP RUB2	/AND PRETEND WE'RE A RUBOUT


	/LIST OF SPECIAL CHARACTERS:

SPC1,	215	/CR
	337	/<-
	212	/LF
	225	/^U
	377	/RUBOUT
	214	/^L
	232	/^Z
	207	/^G
ELIST,	2000	/SEARCH CHAR FOR 'EDIT' INSERTED HERE
CHCK2,	203	/^C
	217	/^O
	220	/^P
	-1


	/LIST FOR TYPE ROUTINE:

CHCK3,	GOODBYE+2	/^C - WAIT FOR TTY FLAG
	CNTRLO		/^O - FLIP TYPEOUT SWITCH
	CNTRLP		/^P - STOP

	PAGE
	/6-BIT PRINTOUT ROUTINE
/	PRINT
/	(TEXT)		/POINTER TO TEXT
/	-RETURN-	/TEXT PRINTED

XPRINT,	0
	CLA
	DCA TYPSW	/RESET TYPEOUT SWITCH
	TAD I XPRINT	/GET POINTER
	DCA PNTR2
	ISZ XPRINT	/RETURN +2
XPRI1,	TAD I PNTR2	/GET FIRST TWO LETTERS
	RTL6
	RAL
	JMS XPRI2	/PRINT FIRST LETTER
	TAD I PNTR2	/AND SECOND LETTER
	JMS XPRI2
	ISZ PNTR2
	JMP XPRI1	/CONTINUE UNTIL ZERO CHAR

XPRI2,	0		/TYPE OUT ONE 6 BIT CHAR
	AND [77
	SNA
	JMP I XPRINT	/DONE
	TAD [-37
	SNA		/<- = CR
	TAD (215-337	/HOPEFULLY WILL PRODUCE A CR
	SPA
	TAD (337-237
	TAD [237	/ADJUST ASCII
	TYPE
	JMP I XPRI2
	/TYPE ONE CHARACTER
	/ENTER WITH CHARACTER IN (AC)

XTYPE,	0
	DCA PREC	/SAVE CHARACTER
	KSF		/CHECK KEYBOARD FLAG
	JMP XTYPE1	/NOTHING
	TAD [200
	KRS		/READ STATIC
	SORT		/SORT FOR SPECIAL CHARS
	 CHCK2
	 CHCK3-CHCK2
XTYPE1,	TAD TYPSW
	SPA CLA		/TYPSW = 4000 IF ECHO IS OFF
	JMP I XTYPE	/DON'T TYPE LETTER - ECHO OFF
	TAD PREC	/GET CHARACTER
XTYPE2,	NOP		/OR JMP XPUN2 FOR 'PUNCH'
	SORT
	 SPC3		/CR, LF, TAB
	 SPC4-SPC3
	TAD TYPCNT	/CHECK RIGHT MARGIN
	CIA
	TAD MAXTAB	/-72
	SMA SZA CLA
	JMP .+4		/STILL OK
	TAD [215	/AT RIGHT MARGIN - TYPE CR, LF, TAB
	JMS TTYOUT
	JMS TAB		/PRINT TAB
	TAD PREC	/GET CHARACTER
	TAD (-240	/TEST FOR CONTROL CHARACTER
	SMA CLA
	 JMP XTYPE3-2
	TAD ("^		/YES, PRINT AS '^X'
	ISZ TYPCNT
	JMS TTYOUT
	TAD (100	/MAKE INTO PRINTING CHARACTER
	ISZ TYPCNT
	TAD PREC
XTYPE3,	JMS TTYOUT	/FINALLY, TYPE THE CHARACTER
	JMP I XTYPE

TAB0,	JMS TAB
	JMP I XTYPE

TAB,	0
	TAD [240	/TAB - PRINT AT LEAST ONE SPACE
	ISZ TYPCNT
	JMS TTYOUT
	TAD TYPCNT
	AND (7
	SZA CLA
	JMP TAB+1	/PRINT OUT SOME MORE SPACES
	JMP I TAB

TTYOUT,	0		/TYPE ONE CHARACTER
	TSF
	JMP .-1
	TLS
	TAD [-215
	SZA CLA		/CR?
	JMP I TTYOUT	/NO, EXIT
	DCA TYPCNT	/YES, CLEAR CHARACTER COUNTER
	TAD [212	/AND ADD LINE FEED
	JMP TTYOUT+1

TYPCNT,	0		/CHARACTER COUNT FOR LINE

CNTRLO,	CLA CLL CML RAR	/^O - FLIP TYPOUT SWITCH
	TAD TYPSW
	DCA TYPSW
	KCC		/GET RID OF IT
	JMP I XTYPE

CNTRLP,	KEY		/MUST ECHO ON TTY:
	KCC
	PRINT; P	/^P
	REPLACE


	/SPECIAL CHARACTERS FOR XTYPE:

SPC3,	215		/CR
	212		/LF
	211		/TAB
	-1
	/'NPUNCH' AND 'PUNCH' COMMANDS

NPUNCH,	JMS I (NOLINE	/PUNCH WITHOUT LINE NUMBERS
PUNCH,	CDF 10
	TAD I (5	/GET START BLOCK OF EDITOR
	CDF
	TAD (EDITLEN-1	/NUMBER OF BLOCKS TO 'PUNCH' OVERLAY
	DCA PREC
	JMS I SHNDLR
	0200		/READ 2 PAGES
PBIG,	OUBUF		/INTO OUBUF
PREC,	0
	 DEVER
	JMP I PBIG

XPUN2,	PSF		/PATCH TO XTYPE
	JMP .-1
	PLS		/PUNCH CHARACTER
	TAD [-215	/TEST FOR CR
	SZA CLA
	JMP I XTYPE	/NO, EXIT
	TAD [212
	JMP XPUN2	/YES, ADD LF

	PAGE
	/SAVE CURRENT NAME IN FIELD 1

PSAVE,	0
	KIKOUT
	TAD [6
	DCA XR2		/NAME OCCUPIES LOCATIONS
	STA		/10007 - 10012
	DCA XR1		/CURRENT NAME OCCUPIES LOCS 0-3
	TAD [-4		/4 WORDS PER NAME
	DCA TAL
	TAD I XR1
	CDF 10
	DCA I XR2
	CDF
	ISZ TAL
	JMP .-5
	JMP I PSAVE


	/SORT AND BRANCH
/	(AC)		/SEARCH CHARACTER
/	SORT
/	(CHAR LIST)	/POINTER TO LIST
/	(DISPATCH LIST) - (CHAR LIST)
/	-RETURN-	/CHARACTER NOT FOUND

XSORT,	0
	CIA
	DCA TEMP
	TAD I XSORT
	DCA PNTR	/POINTER TO FIRST LIST
	ISZ XSORT	/FOR RETURN
	TAD I PNTR	/GET CHARACTER FROM LIST
	SPA		/NEGATIVE?
	JMP SEXIT	/YES, END OF LIST
	TAD TEMP	/NO
	ISZ PNTR
	SZA CLA		/MATCH?
	JMP .-6		/NO, TRY NEXT ENTRY
	CMA		/MATCH FOUND
	TAD PNTR	/GET DIFFERENCE BETWEEN TWO LISTS
	TAD I XSORT	/FROM CALL
	DCA TEMP	/DO AN INDERECT INDIRECT
	TAD I TEMP	/GET LOCATION TO JMP TO
	DCA TEMP
	JMP I TEMP	/AND JMP T THERE

SEXIT,	ISZ XSORT	/NO MATCH - RET +3
	CLA CLL
	JMP I XSORT
	/'DELETE' COMMAND
	/DELETE N1-N2,N3,N4-N5, ETC.

DELTE,	KIKOUT
	TAD RFULL
	SNA CLA
	JMP I (ARGER	/HE DIDN'T TELL ME WHAT TO DELETE!!
	GARGS
	JMP I [CMODE	/STOP - NO MORE ARGUMENTS
DEL2,	TAD M1
	FINDLN		/FIND THE FIRST LINE
	CLA
	TAD T1		/SEE IF WE WANT TO DELETE IT OR THE
	DCA M1		/NEXT LARGEST LINE
	TAD M1
	CIA CLL
	TAD BOTTOM
	SNL CLA
	JMP DELTE+4	/NO - ALL DONE
	WIPE		/YES - GET RID OF IT
	JMP DEL2	/TRY NEXT LINE


	/LIST OF EXTENSIONS FOR CAT:

CLT2,	CBAS
	CBAS
	CBAS
	CBAS


	/LIST OF SPECIAL CHARACTERS FOR XTYPE:

SPC4,	XTYPE3-1
	XTYPE3-1
	TAB0

	/FIND A LINE IN THE TEXT BUFFER
/	(AC)		/LINE NUMBER IN (AC)
/	FINDLN
/	-(AC)-		/LINE NOT FOUND - (AC) = NEXT
			/LARGEST LINE OR 0, IF ONE IS NOT FOUND
/	-RETURN-	/LINE FOUND

XFIN,	0
	DCA T1
	TAD [BUFBEG	/START AT THE BEGINNING OF BUFFER
	DCA UNWD
	CMA
	DCA LARGE	/LARGEST LINE IS 7777
	CDF 10
XFINGO,	TAD PACKWD	/CHECK FOR END OF BUFFER
	CIA CLL
	TAD UNWD
	SZL CLA
	JMP FIN1	/YES, GET NEXT LARGEST LINE FOUND
	TAD I UNWD	/NO, GET LINE NUMBER
	ISZ UNWD
	CIA
	CLL
	SNA		/ZERO LINE NUMBER MEANS "DEAD" LINE
	JMP SKIP	/SKIP OVER IT
	TAD T1		/IS THIS THE LINE WE WANT?
	SNA
	JMP XFND	/YES, STOP
	SNL		/NO, IS IT SMALLER?
	JMP LARG1	/NO, IT MIGHT BE THE NEXT LARGEST
SKIP,	CLA		/YES, SKIP IT
	TAD I UNWD	/UNWD+LENGTH OF LINE = NEXT LINE NUMBER
	TAD UNWD
	DCA UNWD
	JMP XFINGO	/TRY NEXT NUMBER
XFND,	CDF		/LINE NUMBER
	TAD [ICHAR1	/FOUND - SET ICHLV
	DCA I (ICHLV	/FOR UNPACK ROUTINE
	ISZ XFIN	/AND RETURN +2
	ISZ UNWD	/WE DON'T WANT TO UNPACK LINE LENGTH
	JMP I XFIN	/EXIT

LARG1,	CIA		/SEE IF THIS NUMBER IS NEXT LARGEST
	TAD T1
	CLL
	DCA PNTR
	TAD PNTR
	CIA
	TAD LARGE
	SNL CLA
	JMP SKIP	/NO WE ALREADY HAVE A CLOSER ONE
	TAD PNTR
	DCA LARGE	/YES, SAVE IT
	TAD UNWD
	DCA M1		/SAVE UNWD IN CASE THIS ONE
	JMP SKIP	/IS THE NEXT LARGEST NUMBER

FIN1,	CDF		/RETURN FOR NEXT LARGEST
	TAD [ICHAR1	/SET ICHLV FOR UNPACK
	DCA I (ICHLV	/ROUTINE
	TAD LARGE	/NEXT LARGEST LINE
	DCA T1
	IAC
	TAD M1		/ACTUALLY UNWD
	DCA UNWD
	ISZ LARGE	/IF LARGE=7777 THEN
	SKP
	JMP .+3		/NEXT LARGEST NOT FOUND
	CMA
	TAD LARGE
	JMP I XFIN	/RET AC=0 FOR END OF BUFFER

	PAGE
	/'TAPE' COMMAND

TAPE,	RFC
	JMS HCHK	/IS HSR: AVAILABLE?
	TAD (LOW-HSR	/NO, USE LOW SPEED READER
	TAD (HSR	/YES
	DCA DEV
	TAD (NULL	/DON'T ECHO ON RUBOUTS ETC.
	DCA ODEV
	TAD IDEV	/IDEV = XREAD
	JMP TAPGO	/FROM NOW ON, SAME AS 'OLD'


	/READ A CHAR FROM THE HSR:

HSR,	0
	JMS HCHK	/IS THERE ANOTHER CHAR?
	JMP I (ICTRLZ	/NO, PRETEND WE READ A ^Z
	RRB RFC		/YES, READ IT
	TAD (-212
	SNA
	JMP HSR+1	/IGNORE LF
	TAD [212
	JMP I HSR	/EXIT WITH CHARACTER


	/HSR: TIME OUT LOOP
/	JMS HCHK
/	-RETURN-	/OUT OF TAPE
/	-RETURN-	/NEXT CHARACTER READ

HCHK,	0
	DCA (0
	JMS I (NULL	/WASTE TIME
	JMS I (NULL	/  "     "
	ISZ (0
	SKP
	JMP I HCHK	/OUT OF TAPE - RETURN +1
	RSF		/NEXT CHAR READ?
	JMP HCHK+2	/NO, WAIT
	ISZ HCHK	/CHAR READ - RETURN +2
	JMP I HCHK	/EXIT
	/'LENGTH' COMMAND
	/LENGTH N1-N2, N3, ETC.

LEN,	DCA PRHEAD	/DON'T COUNT HEADING
	JMS LENS	/CALCULATE LENGTH
	TAD [NLSP
	DCA I [XPSW2	/NO LEADING SPACES
	TAD HSR
	PLINE		/PRINT NUMBER OF CHARACTERS
	TAD HCHK
	TAD [260
	TYPE		/PRINT ONE'S PLACE
	PRINT; CHARS	/"CHARACTERS"
	TAD RTEMP
	PLINE		/PRINT NUMBER OF BLOCKS
	PRINT; BLOCKS
	REPLACE

LENS,	0
	CMA
	TAD INBUFF	/SAVE INBUFF FOR 'SAVE', ETC.
	DCA XTEMP
	TAD (JMP I [LDONE
	DCA I [PEND
	TAD (LCOUNT	/SUB TO COUNT NUMBER OF CHARS
	DCA ODEV
	CMA		/AT LEAST ONE CHAR IS OUTPUT
	DCA HCHK	/ONE'S PLACE
	DCA HSR		/COUNTER FOR LCOUNT
	IAC		/BLOCK NUMBER
	DCA RTEMP	/FILE IS AT LEAST ONE BLOCK LONG
	TAD [-600	/600 CHARS PER BLOCK
	DCA RTEMP2
	JMP I (LIST0	/SAME AS LIST FROM NOW ON

LDONE,	KEY		/RETURN FROM LIST ROUTINE - RESTORE ODEV
	DCA I [PEND
	TAD XTEMP
	DCA INBUFF	/RESTORE INBUFF
	CMA
	DCA RFULL
	DCA CHAR	/FORCE A 'READ' FOR NEXT CHARACTER
	JMP I LENS

LCOUNT,	0		/SUB TO COUNT NUMBER OF CHARS
	DCA SYSCLR	/GET RID OF CHARACTER
	ISZ RTEMP2
	JMP .+4
	ISZ RTEMP	/600 CHARS - ONE MORE BLOCK
	TAD [-600
	DCA RTEMP2	/RESET CHARACTER COUNTER
	TAD HCHK
	TAD (-11
	SNA
	 JMP LC1	/9TH CHAR - INCREMENT HSR
	TAD [12		/ADD ONE
	DCA HCHK
	JMP LC2		/AND EXIT

LC1,	DCA HCHK
	ISZ HSR
LC2,	TAD SYSCLR
	TAD [-215
	SZA CLA
	 JMP I LCOUNT
	JMP LCOUNT+1	/CR COUNTS AS 2 CHARS


	/SUB TO CLEAR SYSTEM
	/DEVICE HANDLER TABLE

SYSCLR,	0
	TAD (7647
	DCA M1
	TAD (7760
	DCA T1
	TAD (-17
	DCA T2
	CDF 10
MRSETL,	CLL
	TAD I M1
	TAD [200
	SNL CLA
	DCA I M1
	TAD (7770
	AND I T1
	DCA I T1
	ISZ T1
	ISZ M1
	ISZ T2
	JMP MRSETL
	CDF
	JMP I SYSCLR

	PAGE
	/FORM DEV:NAME.EX
	/NAME IS STORED IN LOCS 00000 - 00003
	/DEVICE NAME IS STORED IN DEVNM AND DEVNM+1

XGNAME,	0
	TAD (0423	/DS
	DCA DEVNM
	TAD (1300	/K: IS DEFAULT DEVICE
	DCA DEVNM+1
XGNAM1,	TAD (0201	/.BA IS DEVAULT EXT
	DCA NAME+3
	DCA NAME	/CLEAR NAME
	DCA NAME+1
	DCA NAME+2
	DCA T2		/POINTER TO NAME
	CMA
	DCA RTEMP	/ONLY ALLOW ONE PERIOD
	DCA C1
	TAD CHAR
	SPNOR
	TAD (-"$	/CHECK FOR $
	SNA
	JMP SYSDEV	/$ = SYS:
	TAD (244-301
	CLL CML
	TAD (-32
	SNL CLA
	JMP TERMIN	/MAKE SURE 1ST CHAR IS A 
	TAD CHAR	/LETTER
RD,	UPPER		/NAME MUST BE UPPER CASE
	SORT
	 GLST1		/CHECK FOR SPECIAL CHARACTERS
	 GLST2-GLST1
	TAD CHAR	/CHECK IF  A < CHAR < Z
	TAD L7520	/OR  0 < CHAR < 9
	CLL
	TAD (-12
	SNL CLA
	JMP LTR		/LETTER
	TAD (-301
	TAD CHAR
	CLL CML
	TAD (-32
	SNL CLA
	JMP ILLFN	/ILLEGAL FILE NAME
LTR,	TAD C1
	TAD (-6
	SMA CLA
	JMP RD		/IGNORE AFTER 6 CHARACTERS
	TAD C1
	CLL RAR
	TAD T2
	DCA LARGE
	TAD CHAR
	AND [77
L7520,	SNL CLL
	RTL6		/ODD NUMBERED CHAR - SHIFT LEFT
	TAD I LARGE
	DCA I LARGE	/STORE CHAR
	ISZ C1		/ONE MORE LETTER
	JMP RD

PER,	ISZ RTEMP	/PERIOD TYPED
	 JMP ILLFN	/SECOND PERIOD
	ISZ T2
	DCA NAME+3	/CLEAR DEFAULT EXTENSION
	TAD (4
	DCA C1
	JMP RD

LDEV,	TAD NAME	/':' TYPED - DEVICE NAME
	DCA DEVNM
	TAD NAME+1
	DCA DEVNM+1
LDEV1,	GCHAR		/GET NEXT CHARACTER
	JMP XGNAM1	/LOOK FOR FILE NAME

SYSDEV,	TAD (2331	/'$' TYPED
	DCA DEVNM
	TAD (2300	/'$' IS SAME AS 'SYS:'
	DCA DEVNM+1
	JMP LDEV1

TERMIN,	CLA CMA		/TERMINATOR
	DCA RFULL	/HELP LIST DEV: A BIT
	TAD NAME
	SNA CLA		/WAS A NAME ENTERED?
	JMS I [PGET	/NO, DEFAULT TO CURRENT NAME
	JMP I XGNAME	/YES, EXIT

ILLFN,	PRINT; ILLFNT	/"ILLEGAL FILE NAME"
	REPLACE
	/LOAD DEVICE HANDLER
/	GHNDL
/	-RETURN-	/NON FILE DEICE
/	-RETURN-	/FILE DEVICE

XGHNDL,	0
	JMS I (KIN	/GET THE USR
	TAD ENDBUF
	TAD [400
	RTL6
	TAD [7200
	DCA DEVNM+2
	CIF 10
	JMS I USR
	1		/CALL HANDLER
DEVNM,	0
	0
	0
	 JMP DNAV	/DEVICE NOT AVAILABLE
	TAD DEVNM+1
	DCA DEVNO
	TAD DEVNM+2	/ENTRY OF HNDLER
	DCA INHNDL
	TAD DEVNO	/SEE IF IT WAS A FILE DEVICE
	TAD (7757
	DCA TEMP	/LOOK AT TABLE IN FIELD 1
	CDF 10
	TAD I TEMP
	SPA CLA
	ISZ XGHNDL	/FILE STRUCTURED
	CDF
	JMP I XGHNDL

	PAGE
/DISTINGUISH BETWEEN FATAL AND NONFATAL DEVICE ERRORS

INERRX,	0
	SMA CLA		/INPUT ERROR
	JMP I INERRX	/NON FATAL - CONTINUE
	KEY
	PRINT; READERR	/"INPUT ERROR"


	/ROUTINE TO REPLACE ANY AND ALL
	/SWITCHES THAT VARIOUS COMMANDS MAY
	/HAVE UNSET. (DESTROYED)

END1,	TAD (TAD T1
	DCA LISTLN+3	/LIST WITH LINE NUMBERS
	TAD (JMP I ONE
	DCA NTSP	/NO TRAILING SPACES FOR FILENAME
	TAD [NOP
	DCA XTYPE2	/IN CASE OF 'PUNCH'
	DCA PEND	/NO TRAILER ON NEXT 'LIST', PLEASE!
	TAD [CDF 10
	DCA PFIELD	/PACK INTO FIELD 1
	TAD (XREAD
	DCA IDEV	/RESTORE KEYBOARD INPUT
	TAD [CDF 10
	DCA UNFLD	/UNPACK FROM FILED 1
	TAD (XPL1&177+5200
	DCA XPSW2	/NO LEADING SPACES FOR PLINE
	TAD [LOW	/INPUT FROM LOW SPEED
	DCA DEV
	DCA I [XCHAR	/^P DURING 'EDIT'
	JMS I [PGET	/GET PERMENANT NAME
KEY1,	KEY		/FURTHER OUTPUT ON TTY:
	JMP I [CMODE	/CLEAR INPUT BUFFER AND PRINT 'READY'


	/RESTORE OUTPUT TO TTY:

XKEY,	0
	CLA
	TAD [XTYPE
	DCA ODEV
	JMP I XKEY


	/KICK OUT USR

KOUT,	0
	TAD USR
	SPA CLA
	JMP I KOUT
	CIF 10
	JMS I USR
	11
	TAD [7700
	DCA USR
	JMP I KOUT


	/SUB TO PRINT THE CURRENT FILE NAME
	/ENTER WITH LOCATION OF NAME IN (AC)

XPFNAM,	0
	DCA KOUT
	CMA CLL RTL	/MINUS 3 IN AC
	DCA XKEY	/6 LETTER FILENAMES
	TAD I KOUT
	RTL6
	RAL		/7 TO THE LEFT IS AS GOOD AS 6 TO THE RIGHT!
	JMS ONE		/ADJUST AND PRINT ONE SIXBIT CHAR
	TAD I KOUT	/GET LOWER HALF
	JMS ONE
	ISZ KOUT
	ISZ XKEY
	JMP .-10
	JMP I XPFNAM

	PSPACE=TAD (40	/PRINT TRAILING SPACES

ONE,	0		/PRINT ONE 6 BIT CHAR
	AND [77		/NEED SIX BITS TO PRINT
	SNA
NTSP,	JMP I ONE	/OR TAD (40 FOR TRAILING SPACES
	TAD [-37
	SPA
	TAD (100	/ADJUST LOWER-UPPER ASCII
	TAD (237	/NO PROVISION FOR LOWER CASE ALPHA
	TYPE		/BECAUSE FILENAME CAN'T BE LOWER CASE
	JMP I ONE

XRTL6,	0		/ROTATE (AC) 6 LEFT
	RTL CLL		/(OR 7 RIGHT)
	RTL
	RTL
	JMP I XRTL6

	/PACK CHARACTER INTO OBUFF

PACK02,	0
	DCA INERRX	/SAVE CHAR
	TAD PACKWD
	DCA HFSAVE	/HFSAVE <- PACKWD <- RTEMP2
	TAD RTEMP2
	DCA PACKWD
	TAD INERRX
	JMS PACK0	/PACK CHARACTER
	TAD PACKWD
	DCA RTEMP2	/RTEMP2 <- PACKWD <- HFSAVE
	TAD HFSAVE
	DCA PACKWD
	ISZ SWC		/ROOM FOR ANOTHER CHAR?
	JMP PACKEX	/YES, EXIT
	TAD SLEN	/NO, DUMP BUFFER
	SNA
	IAC		/PATCH FOR NON-DIRECTORY DEVICES
	TAD OUCCNT
	SZA CLA		/ROOM FOR ANOTHER BLOCK ON DEVICE?
	JMP PACKOK	/YES
	KEY
	PRINT; NOROOM	/NO, "NO ROOM FOR OUTPUT FILE"
	REPLACE

PACKOK,	JMS I INHNDL
	4200		/WRITE TWO PAGES
LOUBUF,	OUBUF
OUREC,	0		/RECORD NUMBER
	 DEVER		/DEVICE ERROR
	TAD [-600
	DCA SWC		/RESET CHARACTER COUNT
	ISZ OUREC	/INCREMENT RECORD NUMBER
	ISZ OUCCNT	/RECORD NUMBER FOR CLOSE
	TAD LOUBUF
	DCA RTEMP2
PACKEX,	TAD INERRX
	TAD [-215
	SZA CLA		/WAS CHAR A CR?
	JMP I PACK02	/NO, EXIT
	TAD [212	/YES, ADD LF
	JMP PACK02+1

	PAGE
	/CONVERT DECIMAL TO OCTAL
/	(AC)		/FIRST DIGIT
/	DEC
/	-(AC)-		/OCTAL NUMBER (ALSO IN LINE)

XDEC,	0
	DCA LINE	/AC CAN CONTAIN FIRST DIGIT
	READ
	NUMBCK		/NUMBER?
	JMP OUT		/NO, WE'RE DONE
	DCA T1
	TAD LINE
	SPA		/MULTIPLY BY TEN
	JMP OVFLW
	RTL CLL
	SNL		/THIS IS HARDER THAN IT SOUNDS!
	TAD LINE
	SNL
	RAL CLL
	SNL
	TAD T1
	SZL
	JMP OVFLW
	JMP XDEC+1	/GET NEXT DIGIT

OUT,	CLA		/NON-DIGIT READ
	TAD LINE	/CHECK FOR ILLEGAL NUMBERS
	SZA		/0 IS ILLEGAL
	IAC		/AS IS -1
	SNA CLA
	JMP OVFLW	/NUMBER OUT OF RANGE
	TAD LINE
	JMP I XDEC	/EXIT WITH LINE NUMBER

OVFLW,	KEY		/RESTORE OUTPUT TO TTY:
	PRINT; ILL	/"NUMBER OUT OF RANGE"
	REPLACE


	/GET NEXT TWO ARGUMENTS FROM CBUFF
/	GARGS
/	-RETURN-	/NO ARGUMENTS FOUND
/	-RETURN-	/FIRST ARG IN M1,
			/SECOND ARG IN BOTTOM
XGETA,	0
	ARGS
	JMP I XGETA	/NO ARG FOUND
	DCA M1
	TAD CHAR
	TAD (-",	/N,M MEANS THAT FIRST ARG IS
	SZA CLA		/SAME AS SECOND ONE.
	ARGS
	TAD M1		/NO SECOND ARGUMENT
	DCA BOTTOM
	ISZ XGETA	/ARGS FOUND - RETURN +2
	JMP I XGETA	/EXIT


	/TEST FOR CR OR ':' FOR RESEQUENCE

RCRCHK,	0
	CRCHK		/CR?
	JMP I RCRCHK	/YES, RETURN +1
	TAD (-":
	SNA CLA		/':'?
	JMP RCH1	/YES, ANOTHER STATEMENT ON LINE
	TAD CHAR	/NO, RETURN +2
	ISZ RCRCHK
	JMP I RCRCHK
RCH1,	TAD CHAR	/PACK ':'
	PACK
	JMP RSTAT-5	/ANOTHER STATEMENT ON LINE


	/UNPACK ROUTINE FOR RESEQUENCE

RUNPK,	0
	JMS RUNPK2
	JMS RCHECK	/CHECK FOR "" AND !
	JMS RCRCHK	/CHECK FOR CR AND ':'
	SKP		/CR
	JMP I RUNPK	/NOT A SPECIAL CHAR - EXIT
RUNPK3,	TAD [215
	PACK		/PACK CR
	DCA QSW		/CLEAR QUOTE SWITCH
RES3,	TAD RTEMP	/KILL OLD LINE
	DCA UNWD
	WIPE
	DCA QSW
	JMP RES2	/PROCESS NEXT LINE
	/'MARGIN' COMMAND
	/PERMENANTLY SETS RIGHT MARGIN

MARGIN,	KIKOUT
	ARGS
	TAD (110	/DEFAULT TO 72, IF NO ARGS
	SMA
	TAD (-10	/8 < MARGIN < 2047
	SPA SNA
	 JMP OVFLW	/NEGATIVE NUMBERS HANG OUTPUT ROUTINE
	TAD [10
	DCA MAXTAB
	CDF 10
	IAC
	TAD I (5	/FIRST BLOCK OF EDITOR
	CDF
	DCA RXX
	JMS I SHNDLR	/READ PAGE 0 OF EDITOR
	200
	6400		/INTO 6400
RXX,	0
	 DEVER
	TAD MAXTAB	/SET MAXTAB
	DCA MAXTAB+6400
	TAD RXX
	DCA RXXX
	JMS I SHNDLR	/WRITE IT OUT AGAIN
	4200
	6400
RXXX,	0
	 DEVER
	TAD RXXX
	TAD (61		/CALCULATE BLOCK NUMBER OF
	DCA RXXXX	/RUNTIME SYSTEM
	JMS I SHNDLR	/READ PAGE 0 OF RUN
	200
	6400		/INTO 6400
RXXXX,	0
	 DEVER
	TAD MAXTAB
	DCA 6510	/CHANGE MAXTAB
	TAD RXXXX
	DCA RXXXXX
	JMS I SHNDLR	/AND WRITE IT OUT AGAIN.
	4200
	6400
RXXXXX,	0
	 DEVER
	JMP I [CMODE	/DONE

	PAGE

	/'RESEQUENCE' COMMAND
	/RESEQUENCE N,M -- WHERE N IS STARTING LINE
	/NUMBER AND M IS THE INCREMENT

RESEQ,	KIKOUT
	KILL		/CLEAN UP BUFFER
LCLA,	7600		/FIRST PASS:
	TAD (-7645	/CALCULATE THE LENGTH OF LONGEST LINE
	TAD PACKWD	/RESEQUENCEABEL
	DCA BOTTOM
	TAD [INBUF-1	/CREATE TABLE OF OLD
	DCA XR1		/LINE NUMBERS IN INBUF
	ARGS		/GET FIRST ARGUMENT
	TAD (144	/DEFAULT IS 100
	DCA RSTART
	ARGS		/GET INCREMENT
	TAD (12		/DEFAULT IS 10
	DCA RINC
	TAD RSTART
	DCA LINE
RES0,	IAC		/FIND FIRST LINE
	FINDLN
	JMP REXTRA	/CHECK FR END OF BUFFER
RES1,	TAD T1
	DCA I XR1	/SAVE LINE NUMBER IN TABLE
	TAD LINE
	CLL
	TAD RINC
	SZL
	JMP RESER	/"SEQUENCE NUMBER OVERFLOW"
	DCA LINE
	TAD XR1
	TAD [-7177
	SZL CLA		/IS TABLE FULL?
	JMP RESER2	/YES, ERROR
	CMA		/TEST IF LINE IS TOO LONG
	TAD UNWD
	DCA UNWD
	CDF 10		/TO RESEQUENCE
	TAD I UNWD	/PICK UP LENGTH
	CDF
	TAD BOTTOM
	SNL CLA
	JMP RESER3	/YES, ERROR
	TAD T1
	JMP RES0	/CONTINUE WITH NEXT LINE

REXTRA,	SZA CLA		/END OF BUFFER?
	JMP RES1	/NO, CONTINUE
	CMA		/YES, END OF FIRST PASS
	DCA I XR1	/MARK END OF TABLE
	TAD (XPACK	/SECOND PASS FOR RESEQUENCE:
	DCA ODEV	/OUTPUT TO TEXT BUFFER
	TAD (-7645	/MAKE BUFFER LONGER
	DCA BUFEND
	TAD (JMP I [RFIX
	DCA OVFLW	/PATCH DEC
	DCA QSW		/CLEAR QUOTE SWITCH
	TAD (RUNPK2	/INPUT FROM RESEQUENCE
	DCA IDEV	/UNPACK ROUTINE
	ISZ RESW	/'KILL' GOES TO RESEQUENCE
	TAD XR1
	TAD (-INBUF+1
	CIA
	DCA RNUMB	/NUMBER OF LINES TO RESEQUENCE
	TAD [BUFBEG
	DCA UNWD	/START AT BEGINNING OF BUFFER
RES2,	ISZ RNUMB	/IS THERE ANOTHER LINE?
	JMP RES6	/YES
	TAD LCLA	/NO, DONE
	DCA OVFLW	/UNPATCH DEC
	DCA RESW	/WE ARE NOT IN RESEQUENCE ANYMORE
	TAD (-7577
	DCA BUFEND	/RESET END OF BUFFER
	REPLACE		/DONE

RES6,	CDF 10		/THE TEXT IS IN FIELD 1
	TAD I UNWD	/LINE NUMBER
	ISZ UNWD
	SNA		/DEAD LINE?
	JMP RSKIP	/YES, SKIP IT
	CDF
	DCA RTEMP2
	TAD RTEMP2	/TRADE OLD LINE NUMBER
	JMS RNEW	/IN ON A NEW ONE
	HLT		/EVIL!! - LINE NOT FOUND
	STOLN		/STORE NEW LINE NUMBER
	ISZ UNWD	/SKIP LENGTH
	TAD UNWD
	DCA RTEMP	/SAVE UNWD FOR WIPE
	TAD [ICHAR1
	DCA ICHLV	/SET UNPACK ROUTINE
	TAD OUJMPE	/NEEDED?
	DCA I [OUJMP
	JMS RGET	/GET FIRST CHARACTER
	TAD (-40	/IGNORE LEADING SPACES
	SNA
	JMP .-3
	TAD (40		/RESTORE CHAR
RSTAT,	RTL6
	DCA T1
	JMS RGET	/GET SECOND CHAR
	TAD T1
	SORT		/FOR GOTO, IF, AND ON
	 RLT1
	 RLT2-RLT1
	JMS RGET	/NONE OF ABOVE
	JMP .-1		/COPY REST OF LINE

RSKIP,	TAD I UNWD	/SKIP DELETED LINE
	TAD UNWD	/LENGTH + UNWD = NEXT LINE
	DCA UNWD
	JMP RES6+1	/CONTINUE

RESER3,	PRINT; TOLONG	/"PROGRAM TOO LONG TO RESEQUENCE"
	REPLACE

RESER2,	PRINT; PTLR	/"TOO MANY LINES TO RESEQUENCE"
	REPLACE

	PAGE
/RESEQUENCE GOTO, GOSUB, ON-GOTO, AND IF-THEN

	PACK
RGO,	TAD ICHLV	/ENTRY FOR GOTO OR GOSUB
	DCA RHOLD
	TAD UNWD
	DCA RHOLD2
	JMS RUNPK	/UNPACK CHARACTER
	NUMBCK		/NUMBER?
	JMP RGO-1	/NO, KEEP LOOKING
	DEC		/YES, GET OLD LINE NUMBER
	JMS RNEW	/TRADE IT IN ON A NEW ONE
	TAD M1		/NOT FOUND - USE OLD ONE
	PLINE		/'PRINT' NUMBER INTO TEXT BUFFER
	TAD CHAR
	JMS RCHECK	/CHECK FOR ! AND ""
	JMS RCRCHK	/TEST FOR CR AND ':'
	JMP RUNPK3	/CR
	JMP RGO-1	/LOOK FOR ANOTHER LINE NUMBER

RON,	TAD (-0717+1005	/ON-GOTO - FIND 'GO'
RIFF,	TAD (-1005	/IF-THEN - FIND 'HE'
	DCA M1
	DCA CHAR
RIF1,	TAD CHAR
	AND [77
	RTL6
	DCA T1
	JMS RGET
	TAD T1		/PACK CHARS IN 6-BIT
	TAD M1
	SZA CLA		/MATCH?
	JMP RIF1	/NO, KEEP CHECKING
	JMS RUNPK	/YES, CHECK NEXT CHAR
	TAD (-"N	/'N' AS IN 'THEN'
	SZA CLA
	JMP RON-4	/GOTO
	TAD CHAR	/THEN
	PACK
	JMS RUNPK	/TEST FOR STATEMENT FOLLOWING
	TAD [-240
	SNA CLA
	JMP .-5
	TAD CHAR
	NUMBCK
	SKP		/YES, PROCESS LIKE ANOTHER STATEMENT
	JMP RGO+7	/LINE NUMBER FOLLOWING
	PACK
	TAD CHAR
	AND [77
	JMP RSTAT
	/UNPACK FOR RESEQUENCE
	/EXIT WITH CHAR IN (AC) AND 'CHAR'

RUNPK2,	0
	UNPACK
	DCA CHAR	/SAVE CHARACTER IN CHAR
	TAD CHAR
	JMP I RUNPK2	/EXIT


	/SUB TO CHECK FOR "" AND !
	/ENTER WITH CHARACTER IN (AC)

RCHECK,	0
	TAD (-""
	SNA CLA
	STL RAR		/FLIP QUOTE SWITCH
	TAD QSW
	DCA QSW
	TAD QSW
	SZA CLA
	JMP RUNPK4	/PACK '"'
	TAD CHAR	/CHECK FOR COMMENT
	TAD (-"!
	SNA CLA
	JMP RUNPK5	/IGNORE REST OF LINE

RCHEX,	TAD CHAR
	JMP I RCHECK

RUNPK4,	TAD CHAR	/IGNORE BETWEEN QUOTES
	CRCHK
	JMP RCHEX	/CR IN MIDDLE OF ""
	PACK
	JMS RUNPK2
	JMP RCHECK+1

	JMS RUNPK2	/IGNORE REST OF LINE ON COMMENT
	SKP
RUNPK5,	TAD CHAR
	JMS RCRCHK
	 JMP RCHEX	/EXIT ON CR
	PACK		/OTHERWISE PACK CHAR
	JMP RUNPK5-2	/AND CONTINUE LOOKING FOR CR

RFIX,	CLA		/DEC FOUND AN ILLEGAL LINE NUMBER
	TAD RHOLD	/IGNORE IT
	DCA ICHLV
	TAD RHOLD2
	DCA UNWD
	JMP RES3-2	/COPY REST OF LINE

RGET,	0		/UNPACK AND PACK A CHARACTER
	JMS RUNPK
	PACK
	TAD CHAR
	UPPER		/ALSO RESEQUENCE UPPER CASE
	AND [77		/ONLY USE LOWER 6 BITS
	JMP I RGET

RHOLD,	0		/SAVE ICHLV
RHOLD2,	0		/SAVE UNWD
QSW,	0		/QUOTE SWITCH


	/CHANGE OLD LINE NUMBER TO NEW
/	(AC)		/(AC) CONTAINS OLD LINE NUMBER
/	JMS RNEW	/SEARCH LINE NUMBER TABLE
/	-RETURN-	/LINE NUMBER NOT FOUND
/	-(AC)-		/LINE NUMBER FOUND, NEW LINE NUMBER IN (AC)

RNEW,	0
	DCA M1
	TAD [INBUF-1	/SEARCH TABLE OF LINE NUMBERS
	DCA XR1
	TAD RSTART
	DCA LINE	/CALCULATE NEW NUMBER DURING
RNEW1,	TAD I XR1	/SEARCH
	CIA CLL
	TAD M1
	SNA CLA		/NUMBER FOUND?
	JMP RFND	/YES, RETURN +2
	SNL
	JMP I RNEW	/END OF LIST - RET+1
	TAD LINE
	TAD RINC
	DCA LINE	/UPDATE NEW LINE NUMBER
	JMP RNEW1	/AND CONTINUE SEARCH

RFND,	TAD LINE	/LINE NUMBER FOUND
	ISZ RNEW	/RETURN+2
	JMP I RNEW

	PAGE
	/CONTINUED FROM PAGE 1
	/CHECK FOR 'COMPILE'

CGET,	TAD I (12
	SNA SPA
	JMP CRET	/NO, RESTORE USER'S TEXT

	/YES, SAVE COMPILED PROGRAM

	DCA DEVNO
	DCA I (12	/RESET COMPILED SWITCH
	TAD I [6
	DCA RTEMP2
	TAD I (20	/OSTART FROM COMPILE
	CDF
	SNA
	JMP CRET	/ERRORS - DON'T SAVE
	TAD (377	/ROUND UP
	AND [7600
	DCA M1		/NUMBER OF PAGES
	JMS KIN		/GET MONITOR
	TAD (203	/CREATE .BC EXTENSION
	DCA 3
	TAD DEVNO
	CIF 10
	JMS I USR
	1		/FETCH HNDLER
CINH,	7200
	 DEVER		/ERROR IS NOT POSSIBLE
	TAD M1
	RTR CLL
	RAR
	DCA RTEMP
	TAD RTEMP2
	RTL CLL
	RTL
	TAD RTEMP
	TAD DEVNO
	CIF 10
	JMS I USR
	3		/ENTER NAME
CNAM,	0		/POINTER TO NAME
	0		/USELESS LENGTH
	 DEVER		/DEVICE ERROR
	TAD M1
	RTL6
	RAR CLL
	TAD RTEMP2
	DCA CLEN
	TAD DEVNO
	CIF 10
	JMS I USR
	4		/CLOSE OUTPUT FILE
	0		/POINTER TO NAME
CLEN,	0		/LENGTH
	 DEVER		/DEVICE ERROR
	KIKOUT
	TAD M1
	RAR CML CLL
	TAD [10		/BUFFER IS IN FIELD 10
	DCA CFUN
	TAD CNAM
	DCA CSTBLK	/STARTING BLOCK NUMBER
	JMS I CINH
CFUN,	0
	0		/BUFFER
CSTBLK,	0
	 DEVER		/DEVICE ERROR
	TAD RTEMP2
	SNA
	JMP CRET	/NO DATA, DON'T BOTHER WRITING IT OUT
	RTL6		/MAGICALLY TRANSFORM RECORDS TO
	RAL CLL		/PAGES
	TAD [10		/ADD FIELD ONE BIT
	DCA DFUN1
	JMS I (7607	/READ IN THE DATA THAT COMPILE
DFUN1,	0		/KINDLY WROTE ON THE SYSTEM
	200		/SCRATCH BLOCKS FOR US
	40		/STARTING BLOCK
	 DEVER		/DEVICE ERROR
	TAD M1		/TRANSFORM PAGES TO RECORDS
	RTL6		/(I HOPE)
	RAR		/(I WAS WRONG!!!)
	TAD CSTBLK	/SEE WHERE IN THE FILE TO WRITE
	DCA DBLKX	/OUR DATA OUT
	CLA CLL CML RAR	/MAKE THE READ CONTROL WORD
	TAD DFUN1	/A WRITE CONTROL WORD
	DCA DFUN2	/INTO THE FILE
	JMS I CINH	/ON HIS DEVICE, OF COURSE
DFUN2,	0
	200
DBLKX,	0
	 DEVER		/DEVICE ERROR

	/RETURN FROM COMPILE (OR RUN)
	/RESTORE USER'S TEXT:

CRET,	CDF 10
	CLA
	TAD I (1	/GET FUNCTION WORD
	DCA SWW1
	TAD I (5	/BLOCK NUMBER OF BASIC.SV
	TAD (EDITLEN		/NUMBER OF BLKS TO TEMP FILE
	DCA SWW2
	CDF
	JMS I SHNDLR
SWW1,	0
	0		/START AT 10000
SWW2,	0		/RECORD NUMBER
	 DEVER		/DEVICE ERROR
	CDF 10
	TAD I (2	/RESTORE PACKWD
	DCA PACKWD
	CDF
	JMS I [SYSCLR	/CLEAR SYSTEM TABLES
	TAD LINE
	SNA CLA		/DID WE RETURN ON A ^P?
	JMP NCP		/NO
	KCC		/YES, PRINT "STOP AT LINE XX"
	PRINT; STOP
	TAD LINE
	PLINE		/PRINT LINE NUMBER
NCP,	TAD [215
	TYPE
	JMS I [PGET	/GET PERMENANT NAME
	JMP I [CMODE	/AND BE 'READY'

	PAGE
/'EDIT' COMMAND - SEARCH FOR ONE CHARACTER

EDIT,	KIKOUT
	ARGS		/GET LINE NUMBER
	TAD LINE	/USE LAST LINE NUMBER, IF NO ARG
	DCA LINE
	TAD LINE
	FINDLN		/FIND LINE
	JMP EER		/LINE NOT FOUND
	CMA
	DCA XCHAR	/ENABLE ^L AND ^G
	TAD (EDONE	/GOTO EDONE ON END OF LINE
	DCA XREAD
	JMS EDO		/GET SEARCH CHAR
	JMP RLINE

EUN,	0		/UNPACK ROUTINE FOR 'EDIT'
	UNPACK
	CRCHK		/CR?
	SKP		/YES, ENTER LINE IN TEXT BUFFER
	JMP I EUN	/NO, CONTINUE
	DCA XCHAR	/DISABLE ^L AND ^G
	DCA ELIST	/KILL SEARCH CHAR
	TAD [LOW
	DCA DEV		/SET INPUT TO KEYBOARD
	JMP CRLF	/MAKE LIKE A CR

EBELL,	JMS EMODE	/ARE WE IN EDIT MODE?
	TAD (4207	/YES, TYPE BELL (AS A BELL)
	TYPE
	JMS EDO		/GET SEARCH CHAR
	JMP XRGO	/AND CONTINUE UNPACKING

EFND,	STL RTR		/2000
	DCA ELIST	/DELETE SEARCH CHAR
	TAD [LOW
	DCA DEV		/RESET TO KEYBOARD INPUT
	JMP ECONT+3

EFF,	JMS EMODE	/^L - ARE WE IN EDIT MODE?
	TAD (EUN	/YES, FIND NEXT OCCURENCE OF CHAR
	DCA DEV
	TAD M1
	DCA ELIST	/PUT CHAR INTO ELIST AGAIN
	JMP XRGO	/AND CONTINUE

EMODE,	0		/ARE WE IN EDIT MODE?
	TAD DEV
	TAD (-EUN
	SNA CLA
	JMP ECONT	/NO, CONTINUE
	TAD XCHAR
	SZA CLA
	JMP I EMODE	/YES, RETURN
	JMP ECONT	/NO, CONTINUE

EDONE,	CMA CLA		/EDIT COMPLETED - RESET SWITCHES
	DCA RFULL
	CMA
	TAD INBUFF
	DCA INBUFF
	DCA XCHAR	/DISABLE ^L AND ^G
	TAD [240
	DCA CHAR	/CHEAT - FORCE READ OF FIRST CHAR
	JMP EGO		/COPY NEW LINE INTO BUFFER

EDO,	0		/SET DEV TO EUN
	TAD (EUN
	DCA DEV
	JMS I [LOW	/READ SEARCH CHAR
	DCA ELIST	/ENTER IN LIST
	TAD ELIST
	DCA M1		/SAVE CHAR IN CASE OF ^L
	JMP I EDO

EER,	PRINT; EER2	/"LINE NOT FOUND"
	JMP I [CMODE

XCHAR,	0		/'EDIT' TEMP
	/'NEW' COMMAND
	/NEW <FILE NAME>

NEW,	RNAME; NEWT	/ASK "NEW FILE NAME--"
	JMS PSAVE	/MAKE NAME PERMENANT
	JMP I (EALL	/SCR


	/TEST IF FILENAME IS ON THIS LINE
	/IF NOT, ASK APPROPRIATE QUESTION
/	RNAME
/	(TEXT)		/POINTER TO TEXT
/	-RETURN-	/FILENAME STOED IN 'NAME'

XRNAME,	0
	TAD CHAR
	CRCHK
	 JMP XRN1	/NO, ASK FILE NAME
	GCHAR		/YES
XRN0,	CLA
	GNAME		/GET FILE NAME AND DEVICE
	ISZ XRNAME
	TAD INBUFF
	DCA LARG2
	TAD I LARG2
	TAD [-240
	SNA
	JMP I XRNAME
	TAD (240-",
	SNA CLA
	JMP I XRNAME
	TAD I LARG2
	CRCHK
	JMP I XRNAME
	JMP ILLFN	/"ILLEGAL FILE NAME"

XRN1,	TAD I XRNAME
	DCA XRN2	/POINTER TO TEXT
	PRINT
XRN2,	0		/'OLD' OR 'NEW'
	PRINT; PNAME	/'FILE NAME--'
	CRCHK
	 JMP I [CMODE	/CR TYPED - GIVE UP
	JMP XRN0	/NOW READ NAME AND DEV:


XDEVER,	PRINT; DER	/"DEVICE ERROR"
	REPLACE

RESER,	KEY		/ALSO CALLED BY 'OLD'
	PRINT; SNO	/"SEQUENCE NUMBER OVERFLOW"
	REPLACE

	PAGE
	/'EXECUTE' COMMAND
	/EXECUTE <DEV:FILENAME> <,LINE NUMBER>


EXECUTE,TAD CHAR	/IS FILE NAME ON THIS LINE?
	TAD [-215
	SNA CLA
	JMP EXAFN	/NO, ASK FILE NAME
EXCONT,	KIKOUT
	JMS STEXT	/SAVE USER'S TEXT
	TAD (BUFBEG+5
	DCA PACKWD	/SCRATCH BUFFER
	TAD OUJMPE
	DCA I [OUJMP
	CDF 10		/CREATE FAKE PROGRAM
	TAD (BUFBEG+1	/STARTING LOCATION
	DCA I (17
	DCA I (12	/0=RUN
	CMA		/IN CASE OF ERRORS, SO THAT
	DCA I [BUFBEG	/ERROR PROCESSOR WON'T KICK MONITOR OUT
	TAD (BUFBEG+1
	DCA XR1
	DCA I XR1	/LINE NUMBER
	TAD (560	/CODE FOR 'CHAIN'
	DCA I XR1
	TAD (5040	/STRING FOLLOWING
	DCA I XR1
	CDF
EXX,	SPNOR
	CRCHK		/COPY ARGUMENT
	JMP EXXX	/CR
	TAD (-",
	SNA CLA
	JMP EXXX
	TAD CHAR
	JMS I (PACK0
	JMP EXX		/GET NEXT CHAR
EXXX,	JMS I (PACK0
	TAD I [OUJMP
	TAD (-OUJMPF
	SZA CLA
	ISZ PACKWD	/ROUND UP
	TAD CHAR
	CRCHK
	JMP EXEXIT
	TAD (5214-",
	CDF 10
	DCA I PACKWD
	ISZ PACKWD
	DCA I PACKWD
	ISZ PACKWD
	CLA CLL CML RAR
	DCA I (14
	TAD (-14
	DCA TEMP
	CDF
	DEC
NTNRM2,	SMA
	JMP NOTNRM
	RAR CLL
	CDF 10
	DCA I (4002
	RAR
	DCA I (4003
	TAD TEMP
	CIA
	DCA I (4001
EXEXIT,	CDF 10
	DCA I (4
	DCA I (21
	TAD (5014	/END OF STRING
	DCA I PACKWD
	JMS I [SYSCLR
	TAD CMP
	TAD [21		/OVERLAY RUN INSTEAD OF COMPILE
	DCA CMP
	JMP RUN2+2

NOTNRM,	ISZ TEMP
	NOP
	RAL CLL
	JMP NTNRM2

EXAFN,	PRINT; PNAME
	JMP EXCONT

	/'RENAME' COMMAND
	/RENAME <FILENAME>

REN,	RNAME; NEWT	/ASK: 'NEW FILE NAME--'
	JMS PSAVE	/MAKE NAME PERMENANT
	JMP I [CMODE	/DON'T SCRATCH BUFFER


	/SORT LIST FOR RESEQUENCE

RLT1,	0717		/GO
	1106		/IF
	1716		/ON

RLT2,	RGO		/MUST BE NEGATIVE
	RIFF
	RON


	/^Z READ ON INPUT - STOP

ICTRLZ,	TAD PCHAR
	TAD [-215	/WAS LAST CHAR A CR?
	SNA CLA
	REPLACE
	TAD [215	/NO, PACK ONE
	PACK
	REPLACE


	/ERROR - DEVICE NOT AVAILABELE

DNAV,	DCA DEVNM+2
	PRINT; DEVNM
	PRINT; NAV	/': NOT AVAILABLE'
	REPLACE

	PAGE
	/TEXT FOR EDITOR

TOLONG,	TEXT /PROGRAM TOO LONG TO RESEQUENCE_/
ILLFNT,	TEXT /ILLEGAL FILE NAME_/
EER2,	TEXT /LINE NOT FOUND_/
NONUMB,	TEXT /LINE NUMBERS MISSING ON /
PTLR,	TEXT /TOO MANY LINES_/
CHARS,	TEXT / CHARACTERS  (/
BLOCKS,	TEXT / BLOCKS)_/
P,	TEXT /^P_/
ARG,	TEXT /TOO FEW ARGS_/
TLONG,	TEXT /_LINE TOO LONG_/
GONE,	TEXT /^U_/
BYE,	TEXT /^C/
EDF,	TEXT /ERROR DELETING FILE /
NFDT,	TEXT /NOT A FILE DEVICE_/
READER,	TEXT /ERROR READING FILE_/
STOP,	TEXT /_STOP AT LINE /
OLDERR,	TEXT / NOT FOUND_/
READY,	TEXT /READY__/
ILL,	TEXT /NUMBER OUT OF RANGE_/
WHAT,	TEXT /WHAT??__/
SAVED,	TEXT / ALREADY SAVED_/
NEWT,	TEXT /NEW /
OLDT,	TEXT /OLD /
PNAME,	TEXT /FILE NAME--/
OFULL,	TEXT /TEXT BUFFER IS FULL_/
RDING,	TEXT "  OMSI BASIC-1.854X_"
NAV,	TEXT / NOT AVAILABLE_/
SNO,	TEXT /SEQUENCE NUMBER OVERFLOW_/
DER,	TEXT /DEVICE ERROR_/
NOROOM,	TEXT /NO ROOM ON DEVICE_/
RESKIL,	TAD KILLSW	/RECOVERY AFTER KILL DURING RESEQUENCE
	SNA CLA		/DID WE GAIN ANY ROOM?
	JMP XPACK3	/NO, BAD NEWS
	TAD TAL		/KILL WHAT WE HAVE DONE
	CMA		/SO FAR.
	TAD PACKWD
	DCA TEMP
	CDF 10
	DCA I TEMP
	CDF
	TAD RTEMP2	/FIND LINE NUMBER THAT
	FINDLN		/WE WERE WORKING ON.
	HLT		/WE ARE REALLY DEAD!
	CLA CLL CMA RAL
	TAD UNWD	/BACKUP UNWD FOR RESEQUENCE
	DCA UNWD
	JMP RES6	/CONTINUE WITH RESEQUENCE

	PAGE

	OUBUF=.		/2 PAGE OUTPUT BUFFER
	INBUF=.		/2 PAGE INPUT BUFFER
	CBUFF=.+400	/1 PAGE COMMAND INPUT BUFFER

	/'PUNCH' AND 'NPUNCH' COMMANDS
	/PUNCH WITHOUT 'NH' CAUSES PROGRAM NAME AND DATE TO
	/BE PUNCHED AS A 4 BY 5 DOT MATRIX AT START
	/OF TAPE.

	*OUBUF

	PLS		/TEST IF PTP IS ON
	ISZ SRCHSW
	JMP .-1		/WAIT
	ISZ SRCHSW
	SKP
	JMP PLOW	/PUNCH DIDN'T RESPOND - USE LOW SPEED
	PSF
	JMP .-4		/WAIT SOME MORE...
	DCA SRCHSW	/PUNCH IS ON
	TAD (XPUN2&177+5200
	DCA I (XTYPE2
	TAD [7700	/GIVE TWICE AS MUCH LEADER ON PTP
PLOW1,	JMS LEADER
	TAD (JMS I [LEADER
	DCA I (PEND	/PUNCH TRAILER AT END
	DCA I (PRHEAD	/DON'T PRINT HEADING
	JMS I [NH
	SKP		/NO 'NH' - PUNCH BIG LETTERS
	JMP I (LIST0	/'NH' - PUNCH PROGRAM WITHOUT HEADDING
	TAD (PBTYPE
	DCA ODEV	/PUNCH LARGE LETTERS
	PFNAME		/PUNCH FILE NAME
	TAD NAME+3
	DCA RINC
	PFEXT		/PRINT FILE EXTENSION
	TAD [240
	TYPE
	CDF 10
	TAD I (7666	/LOAD MONITOR'S DATE
	CDF
	JMS I (DATE
	KEY		/RESTORE NORMAL OUTPUT
	TAD (30
	JMS LEADER	/MORE LEADER BEFORE PROGRAM PROPPER
	JMP I (LIST0	/NOW PUNCH ACTUAL PROGRAM

PLOW,	TAD (XTYPE3&177+5200
	DCA I (XTYPE2	/DON'T TEST FOR MARGIN OVERFLOW
	JMP PLOW1	/ON A PUNCH



	/PUNCH LARGE LETTERS ON PAPER TAPE

PBTYPE,	0
	NUMBCK
	SKP		/NOT A NUMBER
	JMP PNUMBER	/PUNCH A NUMBER
	SORT
	 BIGL1		/., /, BLANK
	 BIGL2-BIGL1
	TAD TEMP	/GET CHARACTER FROM XSORT
	CIA
	TAD (-"Z-1
	SMA		/TEST FOR LETTER
	 JMP PBILL	/PRINT BLANK ON ILLEGAL CHARACTERS
	TAD (1+"Z-"A
	SPA
	 JMP PBILL
	DCA PTEMP	/LETTER
	TAD PTEMP
	TAD PTEMP
	TAD PTEMP	/MULTIPLY BY 3
	TAD (LETTER-SLSH
PSLASH,	TAD (SLSH-BLANK
PBLANK,	TAD (BLANK-DOT
PDOT,	TAD (DOT
BPUN0,	DCA PTEMP
	CMA CLL RTL	/-3
	DCA TAL
BPUN1,	TAD I PTEMP
	SPA SNA
	 JMP BPUN2	/ONLY PUNCH SECOND FRAME
	RTR
	AND (370
	JMS I (XTYPE	/TYPE (OR PUNCH) FRAME
	TAD I PTEMP
BPUN2,	RTL
	RAL
	AND (370
	JMS I (XTYPE
	ISZ PTEMP
	ISZ TAL
	JMP BPUN1	/PUNCH NEXT FRAME
	JMP I PBTYPE	/EXIT

PNUMBER,DCA PTEMP
	TAD PTEMP
	TAD PTEMP
	TAD PTEMP
	TAD (NUMBER	/PUNCH A NUMBER
	JMP BPUN0

PBILL,	CLA
	JMP PBLANK	/PRINT BLANK ON ILLEGAL CHARACTERS

BIGL1,	"/
	".
	" 

BIGL2,	PSLASH
	PDOT
	PBLANK


	/PUNCH LEADER ON PAPER TAPE

LEADER,	0
	TAD [7700
	DCA TAL
	TYPE
	ISZ TAL
	JMP .-2
	JMP I LEADER

PTEMP,	0

	PAGE
LETTER,	0000;1705;0276	/A
	0000;1765;1252	/B
	0000;0721;1061	/C
	0000;1761;1056	/D
	0000;1765;1261	/E
	0000;1745;0241	/F
	0000;0721;1275	/G
	0000;1744;0237	/H
	0000;4021;1761	/I
	0000;0461;0741	/J
	0000;1744;0521	/K
	0000;1760;1020	/L
	0037;0104;0137	/M
	0037;0104;0437	/N
	0000;0721;1056	/O
	0000;1745;0242	/P
	0016;1071;0720	/Q
	0000;1745;0662	/R
	0000;1125;1251	/S
	0001;0077;0041	/T
	0000;0760;1017	/U
	0007;0420;0407	/V
	0037;0404;0437	/W
	0021;0504;0521	/X
	0003;0230;0203	/Y
	0000;1465;1161	/Z

NUMBER,	0000;0725;1156	/0
	0000;4022;1760	/1
	0000;1131;1262	/2
	0000;1065;1252	/3
	0000;0344;0237	/4
	0000;1365;1251	/5
	0000;0725;1250	/6
	0000;0171;0243	/7
	0000;0525;1252	/8
	0000;0125;1256	/9

DOT,	0000;4020;0000	/.
	0000;0204;0204	/.
SLSH,	0020;0404;0101	//
BLANK,	0000;0000;0000	/BLANK

	$

